{
  "api/Assets.Core.DTOs.CharacterInfoDto.html": {
    "href": "api/Assets.Core.DTOs.CharacterInfoDto.html",
    "title": "Class CharacterInfoDto | Rpg game documentation",
    "keywords": "Class CharacterInfoDto Inheritance Object CharacterInfoDto Namespace : Assets.Core.DTOs Assembly : cs.temp.dll.dll Syntax public class CharacterInfoDto Constructors CharacterInfoDto(String, String, String, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, ItemDto, ItemDto, ItemDto, ItemDto, ItemDto, TakenQuestDto, ICollection<EffectDto>, String) Declaration public CharacterInfoDto(string id, string username, string characterType, int level, int strength, int dexterity, int intelligence, int luck, int movementSpeed, int armor, int experience, int gold, int health, ItemDto boots, ItemDto cape, ItemDto suit, ItemDto weapon, ItemDto equipment, TakenQuestDto takenQuest, ICollection<EffectDto> effectList, string itemForWeaponUpgrade) Parameters Type Name Description String id String username String characterType Int32 level Int32 strength Int32 dexterity Int32 intelligence Int32 luck Int32 movementSpeed Int32 armor Int32 experience Int32 gold Int32 health ItemDto boots ItemDto cape ItemDto suit ItemDto weapon ItemDto equipment TakenQuestDto takenQuest ICollection < EffectDto > effectList String itemForWeaponUpgrade Fields boots Declaration public ItemDto boots Field Value Type Description ItemDto cape Declaration public ItemDto cape Field Value Type Description ItemDto effectList Declaration public ICollection<EffectDto> effectList Field Value Type Description ICollection < EffectDto > equipment Declaration public ItemDto equipment Field Value Type Description ItemDto suit Declaration public ItemDto suit Field Value Type Description ItemDto takenQuest Declaration public TakenQuestDto takenQuest Field Value Type Description TakenQuestDto weapon Declaration public ItemDto weapon Field Value Type Description ItemDto Properties armor Declaration public int armor { get; set; } Property Value Type Description Int32 characterType Declaration public string characterType { get; set; } Property Value Type Description String dexterity Declaration public int dexterity { get; set; } Property Value Type Description Int32 experience Declaration public int experience { get; set; } Property Value Type Description Int32 gold Declaration public int gold { get; set; } Property Value Type Description Int32 health Declaration public int health { get; set; } Property Value Type Description Int32 id Declaration public string id { get; set; } Property Value Type Description String intelligence Declaration public int intelligence { get; set; } Property Value Type Description Int32 itemForWeaponUpgrade Declaration public string itemForWeaponUpgrade { get; set; } Property Value Type Description String level Declaration public int level { get; set; } Property Value Type Description Int32 luck Declaration public int luck { get; set; } Property Value Type Description Int32 movementSpeed Declaration public int movementSpeed { get; set; } Property Value Type Description Int32 strength Declaration public int strength { get; set; } Property Value Type Description Int32 username Declaration public string username { get; set; } Property Value Type Description String"
  },
  "api/Assets.Core.DTOs.CollectiableItemDto.html": {
    "href": "api/Assets.Core.DTOs.CollectiableItemDto.html",
    "title": "Class CollectiableItemDto | Rpg game documentation",
    "keywords": "Class CollectiableItemDto Inheritance Object CollectiableItemDto Namespace : Assets.Core.DTOs Assembly : cs.temp.dll.dll Syntax public class CollectiableItemDto Constructors CollectiableItemDto(String, String, String) Declaration public CollectiableItemDto(string id, string name, string rarity) Parameters Type Name Description String id String name String rarity Properties id Declaration public string id { get; set; } Property Value Type Description String name Declaration public string name { get; set; } Property Value Type Description String rarity Declaration public string rarity { get; set; } Property Value Type Description String"
  },
  "api/Assets.Core.DTOs.CollectibleItem.html": {
    "href": "api/Assets.Core.DTOs.CollectibleItem.html",
    "title": "Class CollectibleItem | Rpg game documentation",
    "keywords": "Class CollectibleItem Inheritance Object CollectibleItem Namespace : Assets.Core.DTOs Assembly : cs.temp.dll.dll Syntax public class CollectibleItem Properties Id Declaration public string Id { get; set; } Property Value Type Description String Name Declaration public string Name { get; set; } Property Value Type Description String Rarity Declaration public string Rarity { get; set; } Property Value Type Description String"
  },
  "api/Assets.Core.DTOs.CreateCharacterDto.html": {
    "href": "api/Assets.Core.DTOs.CreateCharacterDto.html",
    "title": "Struct CreateCharacterDto | Rpg game documentation",
    "keywords": "Struct CreateCharacterDto Namespace : Assets.Core.DTOs Assembly : cs.temp.dll.dll Syntax public struct CreateCharacterDto Constructors CreateCharacterDto(String, String) Declaration public CreateCharacterDto(string characterType, string weaponType) Parameters Type Name Description String characterType String weaponType Fields characterType Declaration public string characterType Field Value Type Description String weaponType Declaration public string weaponType Field Value Type Description String"
  },
  "api/Assets.Core.DTOs.EffectDto.html": {
    "href": "api/Assets.Core.DTOs.EffectDto.html",
    "title": "Class EffectDto | Rpg game documentation",
    "keywords": "Class EffectDto Inheritance Object EffectDto Namespace : Assets.Core.DTOs Assembly : cs.temp.dll.dll Syntax public class EffectDto Constructors EffectDto(String, String, Int32, String) Declaration public EffectDto(string id, string statIncremented, int statValue, string effectSource) Parameters Type Name Description String id String statIncremented Int32 statValue String effectSource Properties effectSource Declaration public string effectSource { get; set; } Property Value Type Description String id Declaration public string id { get; set; } Property Value Type Description String statIncremented Declaration public string statIncremented { get; set; } Property Value Type Description String statValue Declaration public int statValue { get; set; } Property Value Type Description Int32"
  },
  "api/Assets.Core.DTOs.html": {
    "href": "api/Assets.Core.DTOs.html",
    "title": "Namespace Assets.Core.DTOs | Rpg game documentation",
    "keywords": "Namespace Assets.Core.DTOs Classes CharacterInfoDto CollectiableItemDto CollectibleItem EffectDto ItemDto QuestDto TakenQuestDto Structs CreateCharacterDto LoginDto RegisterDto"
  },
  "api/Assets.Core.DTOs.ItemDto.html": {
    "href": "api/Assets.Core.DTOs.ItemDto.html",
    "title": "Class ItemDto | Rpg game documentation",
    "keywords": "Class ItemDto Inheritance Object ItemDto Namespace : Assets.Core.DTOs Assembly : cs.temp.dll.dll Syntax public class ItemDto Constructors ItemDto(String, Int32, String) Declaration public ItemDto(string id, int level, string name) Parameters Type Name Description String id Int32 level String name Properties id Declaration public string id { get; set; } Property Value Type Description String level Declaration public int level { get; set; } Property Value Type Description Int32 name Declaration public string name { get; set; } Property Value Type Description String"
  },
  "api/Assets.Core.DTOs.LoginDto.html": {
    "href": "api/Assets.Core.DTOs.LoginDto.html",
    "title": "Struct LoginDto | Rpg game documentation",
    "keywords": "Struct LoginDto Namespace : Assets.Core.DTOs Assembly : cs.temp.dll.dll Syntax public struct LoginDto Constructors LoginDto(String, String) Declaration public LoginDto(string username, string password) Parameters Type Name Description String username String password Fields password Declaration public string password Field Value Type Description String username Declaration public string username Field Value Type Description String"
  },
  "api/Assets.Core.DTOs.QuestDto.html": {
    "href": "api/Assets.Core.DTOs.QuestDto.html",
    "title": "Class QuestDto | Rpg game documentation",
    "keywords": "Class QuestDto Inheritance Object QuestDto Namespace : Assets.Core.DTOs Assembly : cs.temp.dll.dll Syntax public class QuestDto Properties AmountOfItems Declaration public int AmountOfItems { get; set; } Property Value Type Description Int32 CollectibleItem Declaration public CollectibleItem CollectibleItem { get; set; } Property Value Type Description CollectibleItem Duration Declaration public TimeSpan Duration { get; set; } Property Value Type Description TimeSpan Experience Declaration public int Experience { get; set; } Property Value Type Description Int32 Gold Declaration public int Gold { get; set; } Property Value Type Description Int32 Id Declaration public string Id { get; set; } Property Value Type Description String"
  },
  "api/Assets.Core.DTOs.RegisterDto.html": {
    "href": "api/Assets.Core.DTOs.RegisterDto.html",
    "title": "Struct RegisterDto | Rpg game documentation",
    "keywords": "Struct RegisterDto Namespace : Assets.Core.DTOs Assembly : cs.temp.dll.dll Syntax public struct RegisterDto Constructors RegisterDto(String, String, String) Declaration public RegisterDto(string email, string username, string password) Parameters Type Name Description String email String username String password Fields email Declaration public string email Field Value Type Description String password Declaration public string password Field Value Type Description String username Declaration public string username Field Value Type Description String"
  },
  "api/Assets.Core.DTOs.Requests.CreateCharacterRequest.html": {
    "href": "api/Assets.Core.DTOs.Requests.CreateCharacterRequest.html",
    "title": "Class CreateCharacterRequest | Rpg game documentation",
    "keywords": "Class CreateCharacterRequest Inheritance Object CreateCharacterRequest Namespace : Assets.Core.DTOs.Requests Assembly : cs.temp.dll.dll Syntax public class CreateCharacterRequest Properties CharacterType Declaration public string CharacterType { get; set; } Property Value Type Description String WeaponType Declaration public string WeaponType { get; set; } Property Value Type Description String"
  },
  "api/Assets.Core.DTOs.Requests.html": {
    "href": "api/Assets.Core.DTOs.Requests.html",
    "title": "Namespace Assets.Core.DTOs.Requests | Rpg game documentation",
    "keywords": "Namespace Assets.Core.DTOs.Requests Classes CreateCharacterRequest RefreshTokenRequest SignInRequest SignUpRequest"
  },
  "api/Assets.Core.DTOs.Requests.RefreshTokenRequest.html": {
    "href": "api/Assets.Core.DTOs.Requests.RefreshTokenRequest.html",
    "title": "Class RefreshTokenRequest | Rpg game documentation",
    "keywords": "Class RefreshTokenRequest Inheritance Object RefreshTokenRequest Namespace : Assets.Core.DTOs.Requests Assembly : cs.temp.dll.dll Syntax public class RefreshTokenRequest Properties RefreshToken Declaration public string RefreshToken { get; set; } Property Value Type Description String"
  },
  "api/Assets.Core.DTOs.Requests.SignInRequest.html": {
    "href": "api/Assets.Core.DTOs.Requests.SignInRequest.html",
    "title": "Class SignInRequest | Rpg game documentation",
    "keywords": "Class SignInRequest Inheritance Object SignInRequest Namespace : Assets.Core.DTOs.Requests Assembly : cs.temp.dll.dll Syntax public class SignInRequest Properties Password Declaration public string Password { get; set; } Property Value Type Description String Username Declaration public string Username { get; set; } Property Value Type Description String"
  },
  "api/Assets.Core.DTOs.Requests.SignUpRequest.html": {
    "href": "api/Assets.Core.DTOs.Requests.SignUpRequest.html",
    "title": "Class SignUpRequest | Rpg game documentation",
    "keywords": "Class SignUpRequest Inheritance Object SignUpRequest Namespace : Assets.Core.DTOs.Requests Assembly : cs.temp.dll.dll Syntax public class SignUpRequest Properties Email Declaration public string Email { get; set; } Property Value Type Description String Password Declaration public string Password { get; set; } Property Value Type Description String Username Declaration public string Username { get; set; } Property Value Type Description String"
  },
  "api/Assets.Core.DTOs.Responses.html": {
    "href": "api/Assets.Core.DTOs.Responses.html",
    "title": "Namespace Assets.Core.DTOs.Responses | Rpg game documentation",
    "keywords": "Namespace Assets.Core.DTOs.Responses Classes SignInResponse SignUpResponse"
  },
  "api/Assets.Core.DTOs.Responses.SignInResponse.html": {
    "href": "api/Assets.Core.DTOs.Responses.SignInResponse.html",
    "title": "Class SignInResponse | Rpg game documentation",
    "keywords": "Class SignInResponse Inheritance Object SignInResponse Namespace : Assets.Core.DTOs.Responses Assembly : cs.temp.dll.dll Syntax public class SignInResponse Properties RefreshToken Declaration public string RefreshToken { get; set; } Property Value Type Description String Token Declaration public string Token { get; set; } Property Value Type Description String"
  },
  "api/Assets.Core.DTOs.Responses.SignUpResponse.html": {
    "href": "api/Assets.Core.DTOs.Responses.SignUpResponse.html",
    "title": "Class SignUpResponse | Rpg game documentation",
    "keywords": "Class SignUpResponse Inheritance Object SignUpResponse Namespace : Assets.Core.DTOs.Responses Assembly : cs.temp.dll.dll Syntax public class SignUpResponse Properties Message Declaration public string Message { get; set; } Property Value Type Description String"
  },
  "api/Assets.Core.DTOs.TakenQuestDto.html": {
    "href": "api/Assets.Core.DTOs.TakenQuestDto.html",
    "title": "Class TakenQuestDto | Rpg game documentation",
    "keywords": "Class TakenQuestDto Inheritance Object TakenQuestDto Namespace : Assets.Core.DTOs Assembly : cs.temp.dll.dll Syntax public class TakenQuestDto Constructors TakenQuestDto(String, Int32, Int32, TimeSpan, DateTime, CollectiableItemDto, Int32) Declaration public TakenQuestDto(string id, int experience, int gold, TimeSpan duration, DateTime questStarted, CollectiableItemDto collectibleItem, int amountOfItems) Parameters Type Name Description String id Int32 experience Int32 gold TimeSpan duration DateTime questStarted CollectiableItemDto collectibleItem Int32 amountOfItems Fields collectibleItem Declaration public CollectiableItemDto collectibleItem Field Value Type Description CollectiableItemDto Properties amountOfItems Declaration public int amountOfItems { get; set; } Property Value Type Description Int32 duration Declaration public TimeSpan duration { get; set; } Property Value Type Description TimeSpan experience Declaration public int experience { get; set; } Property Value Type Description Int32 gold Declaration public int gold { get; set; } Property Value Type Description Int32 id Declaration public string id { get; set; } Property Value Type Description String questStarted Declaration public DateTime questStarted { get; set; } Property Value Type Description DateTime"
  },
  "api/Assets.Core.Enums.CharacterClass.html": {
    "href": "api/Assets.Core.Enums.CharacterClass.html",
    "title": "Enum CharacterClass | Rpg game documentation",
    "keywords": "Enum CharacterClass Namespace : Assets.Core.Enums Assembly : cs.temp.dll.dll Syntax public enum CharacterClass Fields Name Description JEDI_KNIGHT MAGE PRICE_HUNTER SITH_LORD"
  },
  "api/Assets.Core.Enums.html": {
    "href": "api/Assets.Core.Enums.html",
    "title": "Namespace Assets.Core.Enums | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Enums Enums CharacterClass WeaponType"
  },
  "api/Assets.Core.Enums.WeaponType.html": {
    "href": "api/Assets.Core.Enums.WeaponType.html",
    "title": "Enum WeaponType | Rpg game documentation",
    "keywords": "Enum WeaponType Namespace : Assets.Core.Enums Assembly : cs.temp.dll.dll Syntax public enum WeaponType Fields Name Description ARCHANGEL_STAFF BLUE_LIGHTSABER CROSS_LIGHTSABER CURVED_LIGHTSABER DOUBLE_LIGHTSABER DUAL_PISTOL GREEN_LIGHTSABER HEAVY_PISTOL LIGHT_PISTOL LUDEN_STAFF PURPLE_LIGHTSABER VOID_STAFF"
  },
  "api/Assets.Core.Extensions.html": {
    "href": "api/Assets.Core.Extensions.html",
    "title": "Namespace Assets.Core.Extensions | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Extensions Classes StringExtensions"
  },
  "api/Assets.Core.Extensions.StringExtensions.html": {
    "href": "api/Assets.Core.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | Rpg game documentation",
    "keywords": "Class StringExtensions Inheritance Object StringExtensions Namespace : Assets.Core.Extensions Assembly : cs.temp.dll.dll Syntax public static class StringExtensions Methods TrimQuotationMarks(String) Declaration public static string TrimQuotationMarks(this string str) Parameters Type Name Description String str Returns Type Description String"
  },
  "api/Assets.Core.Json.html": {
    "href": "api/Assets.Core.Json.html",
    "title": "Namespace Assets.Core.Json | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Json Classes JSONObject JSONTemplates Enums JSONObject.Type Delegates JSONObject.AddJSONContents JSONObject.FieldNotFound JSONObject.GetFieldResponse"
  },
  "api/Assets.Core.Json.JSONObject.AddJSONContents.html": {
    "href": "api/Assets.Core.Json.JSONObject.AddJSONContents.html",
    "title": "Delegate JSONObject.AddJSONContents | Rpg game documentation",
    "keywords": "Delegate JSONObject.AddJSONContents Namespace : Assets.Core.Json Assembly : cs.temp.dll.dll Syntax public delegate void AddJSONContents(JSONObject self); Parameters Type Name Description JSONObject self"
  },
  "api/Assets.Core.Json.JSONObject.FieldNotFound.html": {
    "href": "api/Assets.Core.Json.JSONObject.FieldNotFound.html",
    "title": "Delegate JSONObject.FieldNotFound | Rpg game documentation",
    "keywords": "Delegate JSONObject.FieldNotFound Namespace : Assets.Core.Json Assembly : cs.temp.dll.dll Syntax public delegate void FieldNotFound(string name); Parameters Type Name Description String name"
  },
  "api/Assets.Core.Json.JSONObject.GetFieldResponse.html": {
    "href": "api/Assets.Core.Json.JSONObject.GetFieldResponse.html",
    "title": "Delegate JSONObject.GetFieldResponse | Rpg game documentation",
    "keywords": "Delegate JSONObject.GetFieldResponse Namespace : Assets.Core.Json Assembly : cs.temp.dll.dll Syntax public delegate void GetFieldResponse(JSONObject obj); Parameters Type Name Description JSONObject obj"
  },
  "api/Assets.Core.Json.JSONObject.html": {
    "href": "api/Assets.Core.Json.JSONObject.html",
    "title": "Class JSONObject | Rpg game documentation",
    "keywords": "Class JSONObject Inheritance Object JSONObject Namespace : Assets.Core.Json Assembly : cs.temp.dll.dll Syntax public class JSONObject Constructors JSONObject() Declaration public JSONObject() JSONObject(JSONObject.AddJSONContents) Declaration public JSONObject(JSONObject.AddJSONContents content) Parameters Type Name Description JSONObject.AddJSONContents content JSONObject(JSONObject.Type) Declaration public JSONObject(JSONObject.Type t) Parameters Type Name Description JSONObject.Type t JSONObject(JSONObject[]) Declaration public JSONObject(JSONObject[] objs) Parameters Type Name Description JSONObject [] objs JSONObject(Dictionary<String, JSONObject>) Declaration public JSONObject(Dictionary<string, JSONObject> dic) Parameters Type Name Description Dictionary < String , JSONObject > dic JSONObject(Dictionary<String, String>) Declaration public JSONObject(Dictionary<string, string> dic) Parameters Type Name Description Dictionary < String , String > dic JSONObject(Boolean) Declaration public JSONObject(bool b) Parameters Type Name Description Boolean b JSONObject(Int32) Declaration public JSONObject(int i) Parameters Type Name Description Int32 i JSONObject(Int64) Declaration public JSONObject(long l) Parameters Type Name Description Int64 l JSONObject(Single) Declaration public JSONObject(float f) Parameters Type Name Description Single f JSONObject(String, Int32, Boolean, Boolean) Declaration public JSONObject(string str, int maxDepth = -2, bool storeExcessLevels = false, bool strict = false) Parameters Type Name Description String str Int32 maxDepth Boolean storeExcessLevels Boolean strict Fields b Declaration public bool b Field Value Type Description Boolean i Declaration public long i Field Value Type Description Int64 keys Declaration public List<string> keys Field Value Type Description List < String > list Declaration public List<JSONObject> list Field Value Type Description List < JSONObject > n Declaration public float n Field Value Type Description Single str Declaration public string str Field Value Type Description String type Declaration public JSONObject.Type type Field Value Type Description JSONObject.Type useInt Declaration public bool useInt Field Value Type Description Boolean WHITESPACE Declaration public static readonly char[] WHITESPACE Field Value Type Description Char [] Properties arr Declaration public static JSONObject arr { get; } Property Value Type Description JSONObject Count Declaration public int Count { get; } Property Value Type Description Int32 f Declaration public float f { get; } Property Value Type Description Single IsArray Declaration public bool IsArray { get; } Property Value Type Description Boolean IsBool Declaration public bool IsBool { get; } Property Value Type Description Boolean isContainer Declaration public bool isContainer { get; } Property Value Type Description Boolean IsNull Declaration public bool IsNull { get; } Property Value Type Description Boolean IsNumber Declaration public bool IsNumber { get; } Property Value Type Description Boolean IsObject Declaration public bool IsObject { get; } Property Value Type Description Boolean IsString Declaration public bool IsString { get; } Property Value Type Description Boolean Item[Int32] Declaration public JSONObject this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description JSONObject Item[String] Declaration public JSONObject this[string index] { get; set; } Parameters Type Name Description String index Property Value Type Description JSONObject nullJO Declaration public static JSONObject nullJO { get; } Property Value Type Description JSONObject obj Declaration public static JSONObject obj { get; } Property Value Type Description JSONObject Methods Absorb(JSONObject) Declaration public void Absorb(JSONObject obj) Parameters Type Name Description JSONObject obj Add(JSONObject) Declaration public void Add(JSONObject obj) Parameters Type Name Description JSONObject obj Add(JSONObject.AddJSONContents) Declaration public void Add(JSONObject.AddJSONContents content) Parameters Type Name Description JSONObject.AddJSONContents content Add(Boolean) Declaration public void Add(bool val) Parameters Type Name Description Boolean val Add(Int32) Declaration public void Add(int val) Parameters Type Name Description Int32 val Add(Single) Declaration public void Add(float val) Parameters Type Name Description Single val Add(String) Declaration public void Add(string str) Parameters Type Name Description String str AddField(String, JSONObject) Declaration public void AddField(string name, JSONObject obj) Parameters Type Name Description String name JSONObject obj AddField(String, JSONObject.AddJSONContents) Declaration public void AddField(string name, JSONObject.AddJSONContents content) Parameters Type Name Description String name JSONObject.AddJSONContents content AddField(String, Boolean) Declaration public void AddField(string name, bool val) Parameters Type Name Description String name Boolean val AddField(String, Int32) Declaration public void AddField(string name, int val) Parameters Type Name Description String name Int32 val AddField(String, Int64) Declaration public void AddField(string name, long val) Parameters Type Name Description String name Int64 val AddField(String, Single) Declaration public void AddField(string name, float val) Parameters Type Name Description String name Single val AddField(String, String) Declaration public void AddField(string name, string val) Parameters Type Name Description String name String val Bake() Declaration public void Bake() BakeAsync() Declaration public IEnumerable BakeAsync() Returns Type Description IEnumerable Clear() Declaration public void Clear() Copy() Copy a JSONObject. This could probably work better Declaration public JSONObject Copy() Returns Type Description JSONObject Create() Declaration public static JSONObject Create() Returns Type Description JSONObject Create(JSONObject.AddJSONContents) Declaration public static JSONObject Create(JSONObject.AddJSONContents content) Parameters Type Name Description JSONObject.AddJSONContents content Returns Type Description JSONObject Create(JSONObject.Type) Declaration public static JSONObject Create(JSONObject.Type t) Parameters Type Name Description JSONObject.Type t Returns Type Description JSONObject Create(Dictionary<String, String>) Declaration public static JSONObject Create(Dictionary<string, string> dic) Parameters Type Name Description Dictionary < String , String > dic Returns Type Description JSONObject Create(Boolean) Declaration public static JSONObject Create(bool val) Parameters Type Name Description Boolean val Returns Type Description JSONObject Create(Int32) Declaration public static JSONObject Create(int val) Parameters Type Name Description Int32 val Returns Type Description JSONObject Create(Int64) Declaration public static JSONObject Create(long val) Parameters Type Name Description Int64 val Returns Type Description JSONObject Create(Single) Declaration public static JSONObject Create(float val) Parameters Type Name Description Single val Returns Type Description JSONObject Create(String, Int32, Boolean, Boolean) Create a JSONObject by parsing string data Declaration public static JSONObject Create(string val, int maxDepth = -2, bool storeExcessLevels = false, bool strict = false) Parameters Type Name Description String val The string to be parsed Int32 maxDepth The maximum depth for the parser to search. Set this to to 1 for the first level, 2 for the first 2 levels, etc. It defaults to -2 because -1 is the depth value that is parsed (see below) Boolean storeExcessLevels Whether to store levels beyond maxDepth in baked JSONObjects Boolean strict Whether to be strict in the parsing. For example, non-strict parsing will successfully parse \"a string\" into a string-type Returns Type Description JSONObject CreateBakedObject(String) Declaration public static JSONObject CreateBakedObject(string val) Parameters Type Name Description String val Returns Type Description JSONObject CreateStringObject(String) Declaration public static JSONObject CreateStringObject(string val) Parameters Type Name Description String val Returns Type Description JSONObject GetField(ref Boolean, String, JSONObject.FieldNotFound) Declaration public bool GetField(ref bool field, string name, JSONObject.FieldNotFound fail = null) Parameters Type Name Description Boolean field String name JSONObject.FieldNotFound fail Returns Type Description Boolean GetField(out Boolean, String, Boolean) Declaration public bool GetField(out bool field, string name, bool fallback) Parameters Type Name Description Boolean field String name Boolean fallback Returns Type Description Boolean GetField(ref Int32, String, JSONObject.FieldNotFound) Declaration public bool GetField(ref int field, string name, JSONObject.FieldNotFound fail = null) Parameters Type Name Description Int32 field String name JSONObject.FieldNotFound fail Returns Type Description Boolean GetField(out Int32, String, Int32) Declaration public bool GetField(out int field, string name, int fallback) Parameters Type Name Description Int32 field String name Int32 fallback Returns Type Description Boolean GetField(ref Int64, String, JSONObject.FieldNotFound) Declaration public bool GetField(ref long field, string name, JSONObject.FieldNotFound fail = null) Parameters Type Name Description Int64 field String name JSONObject.FieldNotFound fail Returns Type Description Boolean GetField(out Int64, String, Int64) Declaration public bool GetField(out long field, string name, long fallback) Parameters Type Name Description Int64 field String name Int64 fallback Returns Type Description Boolean GetField(ref Single, String, JSONObject.FieldNotFound) Declaration public bool GetField(ref float field, string name, JSONObject.FieldNotFound fail = null) Parameters Type Name Description Single field String name JSONObject.FieldNotFound fail Returns Type Description Boolean GetField(out Single, String, Single) Declaration public bool GetField(out float field, string name, float fallback) Parameters Type Name Description Single field String name Single fallback Returns Type Description Boolean GetField(String) Declaration public JSONObject GetField(string name) Parameters Type Name Description String name Returns Type Description JSONObject GetField(String, JSONObject.GetFieldResponse, JSONObject.FieldNotFound) Declaration public void GetField(string name, JSONObject.GetFieldResponse response, JSONObject.FieldNotFound fail = null) Parameters Type Name Description String name JSONObject.GetFieldResponse response JSONObject.FieldNotFound fail GetField(ref String, String, JSONObject.FieldNotFound) Declaration public bool GetField(ref string field, string name, JSONObject.FieldNotFound fail = null) Parameters Type Name Description String field String name JSONObject.FieldNotFound fail Returns Type Description Boolean GetField(out String, String, String) Declaration public bool GetField(out string field, string name, string fallback) Parameters Type Name Description String field String name String fallback Returns Type Description Boolean GetField(ref UInt32, String, JSONObject.FieldNotFound) Declaration public bool GetField(ref uint field, string name, JSONObject.FieldNotFound fail = null) Parameters Type Name Description UInt32 field String name JSONObject.FieldNotFound fail Returns Type Description Boolean GetField(out UInt32, String, UInt32) Declaration public bool GetField(out uint field, string name, uint fallback) Parameters Type Name Description UInt32 field String name UInt32 fallback Returns Type Description Boolean HasField(String) Declaration public bool HasField(string name) Parameters Type Name Description String name Returns Type Description Boolean HasFields(String[]) Declaration public bool HasFields(string[] names) Parameters Type Name Description String [] names Returns Type Description Boolean Merge(JSONObject) Declaration public void Merge(JSONObject obj) Parameters Type Name Description JSONObject obj Print(Boolean) Declaration public string Print(bool pretty = false) Parameters Type Name Description Boolean pretty Returns Type Description String PrintAsync(Boolean) Declaration public IEnumerable<string> PrintAsync(bool pretty = false) Parameters Type Name Description Boolean pretty Returns Type Description IEnumerable < String > RemoveField(String) Declaration public void RemoveField(string name) Parameters Type Name Description String name SetField(String, JSONObject) Declaration public void SetField(string name, JSONObject obj) Parameters Type Name Description String name JSONObject obj SetField(String, Boolean) Declaration public void SetField(string name, bool val) Parameters Type Name Description String name Boolean val SetField(String, Int32) Declaration public void SetField(string name, int val) Parameters Type Name Description String name Int32 val SetField(String, Single) Declaration public void SetField(string name, float val) Parameters Type Name Description String name Single val SetField(String, String) Declaration public void SetField(string name, string val) Parameters Type Name Description String name String val StringObject(String) Declaration public static JSONObject StringObject(string val) Parameters Type Name Description String val Returns Type Description JSONObject ToDictionary() Declaration public Dictionary<string, string> ToDictionary() Returns Type Description Dictionary < String , String > ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() ToString(Boolean) Declaration public string ToString(bool pretty) Parameters Type Name Description Boolean pretty Returns Type Description String Operators Implicit(JSONObject to Boolean) Declaration public static implicit operator bool (JSONObject o) Parameters Type Name Description JSONObject o Returns Type Description Boolean"
  },
  "api/Assets.Core.Json.JSONObject.Type.html": {
    "href": "api/Assets.Core.Json.JSONObject.Type.html",
    "title": "Enum JSONObject.Type | Rpg game documentation",
    "keywords": "Enum JSONObject.Type Namespace : Assets.Core.Json Assembly : cs.temp.dll.dll Syntax public enum Type Fields Name Description ARRAY BAKED BOOL NULL NUMBER OBJECT STRING"
  },
  "api/Assets.Core.Json.JSONTemplates.html": {
    "href": "api/Assets.Core.Json.JSONTemplates.html",
    "title": "Class JSONTemplates | Rpg game documentation",
    "keywords": "Class JSONTemplates Inheritance Object JSONTemplates Namespace : Assets.Core.Json Assembly : cs.temp.dll.dll Syntax public static class JSONTemplates Methods FromColor(Color) Declaration public static JSONObject FromColor(Color c) Parameters Type Name Description Color c Returns Type Description JSONObject FromLayerMask(LayerMask) Declaration public static JSONObject FromLayerMask(LayerMask l) Parameters Type Name Description LayerMask l Returns Type Description JSONObject FromMatrix4x4(Matrix4x4) Declaration public static JSONObject FromMatrix4x4(Matrix4x4 m) Parameters Type Name Description Matrix4x4 m Returns Type Description JSONObject FromQuaternion(Quaternion) Declaration public static JSONObject FromQuaternion(Quaternion q) Parameters Type Name Description Quaternion q Returns Type Description JSONObject FromRect(Rect) Declaration public static JSONObject FromRect(Rect r) Parameters Type Name Description Rect r Returns Type Description JSONObject FromRectOffset(RectOffset) Declaration public static JSONObject FromRectOffset(RectOffset r) Parameters Type Name Description RectOffset r Returns Type Description JSONObject FromVector2(Vector2) Declaration public static JSONObject FromVector2(Vector2 v) Parameters Type Name Description Vector2 v Returns Type Description JSONObject FromVector3(Vector3) Declaration public static JSONObject FromVector3(Vector3 v) Parameters Type Name Description Vector3 v Returns Type Description JSONObject FromVector4(Vector4) Declaration public static JSONObject FromVector4(Vector4 v) Parameters Type Name Description Vector4 v Returns Type Description JSONObject ToColor(JSONObject) Declaration public static Color ToColor(JSONObject obj) Parameters Type Name Description JSONObject obj Returns Type Description Color ToLayerMask(JSONObject) Declaration public static LayerMask ToLayerMask(JSONObject obj) Parameters Type Name Description JSONObject obj Returns Type Description LayerMask ToMatrix4x4(JSONObject) Declaration public static Matrix4x4 ToMatrix4x4(JSONObject obj) Parameters Type Name Description JSONObject obj Returns Type Description Matrix4x4 ToQuaternion(JSONObject) Declaration public static Quaternion ToQuaternion(JSONObject obj) Parameters Type Name Description JSONObject obj Returns Type Description Quaternion ToRect(JSONObject) Declaration public static Rect ToRect(JSONObject obj) Parameters Type Name Description JSONObject obj Returns Type Description Rect ToRectOffset(JSONObject) Declaration public static RectOffset ToRectOffset(JSONObject obj) Parameters Type Name Description JSONObject obj Returns Type Description RectOffset ToVector2(JSONObject) Declaration public static Vector2 ToVector2(JSONObject obj) Parameters Type Name Description JSONObject obj Returns Type Description Vector2 ToVector3(JSONObject) Declaration public static Vector3 ToVector3(JSONObject obj) Parameters Type Name Description JSONObject obj Returns Type Description Vector3 ToVector4(JSONObject) Declaration public static Vector4 ToVector4(JSONObject obj) Parameters Type Name Description JSONObject obj Returns Type Description Vector4"
  },
  "api/Assets.Core.Managers.AuthManager.Scripts.AuthManager.html": {
    "href": "api/Assets.Core.Managers.AuthManager.Scripts.AuthManager.html",
    "title": "Class AuthManager | Rpg game documentation",
    "keywords": "Class AuthManager Inheritance Object AuthManager Namespace : Assets.Core.Managers.AuthManager.Scripts Assembly : cs.temp.dll.dll Syntax public class AuthManager : Manager<AuthManager>"
  },
  "api/Assets.Core.Managers.AuthManager.Scripts.html": {
    "href": "api/Assets.Core.Managers.AuthManager.Scripts.html",
    "title": "Namespace Assets.Core.Managers.AuthManager.Scripts | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Managers.AuthManager.Scripts Classes AuthManager SessionDataObject"
  },
  "api/Assets.Core.Managers.AuthManager.Scripts.SessionDataObject.html": {
    "href": "api/Assets.Core.Managers.AuthManager.Scripts.SessionDataObject.html",
    "title": "Class SessionDataObject | Rpg game documentation",
    "keywords": "Class SessionDataObject Inheritance Object SessionDataObject Namespace : Assets.Core.Managers.AuthManager.Scripts Assembly : cs.temp.dll.dll Syntax public class SessionDataObject : ScriptableObject Properties Id Declaration public string Id { get; set; } Property Value Type Description String RefreshToken Declaration public string RefreshToken { get; set; } Property Value Type Description String Token Declaration public string Token { get; set; } Property Value Type Description String Username Declaration public string Username { get; set; } Property Value Type Description String Methods Delete() Declaration public void Delete() Load() Declaration public void Load() Save() Declaration public void Save()"
  },
  "api/Assets.Core.Managers.CharacterManager.CharacterManager.html": {
    "href": "api/Assets.Core.Managers.CharacterManager.CharacterManager.html",
    "title": "Class CharacterManager | Rpg game documentation",
    "keywords": "Class CharacterManager Inheritance Object CharacterManager Namespace : Assets.Core.Managers.CharacterManager Assembly : cs.temp.dll.dll Syntax public class CharacterManager : Manager<CharacterManager>"
  },
  "api/Assets.Core.Managers.CharacterManager.html": {
    "href": "api/Assets.Core.Managers.CharacterManager.html",
    "title": "Namespace Assets.Core.Managers.CharacterManager | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Managers.CharacterManager Classes CharacterManager"
  },
  "api/Assets.Core.Managers.GameManager.Scripts.GameManager.GameState.html": {
    "href": "api/Assets.Core.Managers.GameManager.Scripts.GameManager.GameState.html",
    "title": "Enum GameManager.GameState | Rpg game documentation",
    "keywords": "Enum GameManager.GameState Namespace : Assets.Core.Managers.GameManager.Scripts Assembly : cs.temp.dll.dll Syntax public enum GameState Fields Name Description AUTH_MENU CHARACTER_MENU LOGIN_MENU PAUSED PREGAME RUNNING SIGNUP_MENU WELCOME_MENU"
  },
  "api/Assets.Core.Managers.GameManager.Scripts.GameManager.html": {
    "href": "api/Assets.Core.Managers.GameManager.Scripts.GameManager.html",
    "title": "Class GameManager | Rpg game documentation",
    "keywords": "Class GameManager Inheritance Object GameManager Namespace : Assets.Core.Managers.GameManager.Scripts Assembly : cs.temp.dll.dll Syntax public class GameManager : Manager<GameManager> Fields OnGameStateChanged Declaration public Events.EventGameState OnGameStateChanged Field Value Type Description Events.EventGameState SystemPrefabs Declaration public GameObject[] SystemPrefabs Field Value Type Description GameObject [] Properties CurrentGameState Declaration public GameManager.GameState CurrentGameState { get; } Property Value Type Description GameManager.GameState Methods GoToMenu(String) Declaration public void GoToMenu(string menu) Parameters Type Name Description String menu LoadScene(String) Declaration public void LoadScene(string sceneName) Parameters Type Name Description String sceneName OnDestroy() Declaration protected void OnDestroy() QuitGame() Declaration public void QuitGame() RestartGame() Declaration public void RestartGame() StartGame() Declaration public void StartGame() TogglePause() Declaration public void TogglePause()"
  },
  "api/Assets.Core.Managers.GameManager.Scripts.html": {
    "href": "api/Assets.Core.Managers.GameManager.Scripts.html",
    "title": "Namespace Assets.Core.Managers.GameManager.Scripts | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Managers.GameManager.Scripts Classes GameManager Enums GameManager.GameState"
  },
  "api/Assets.Core.Managers.InputManager.Scripts.html": {
    "href": "api/Assets.Core.Managers.InputManager.Scripts.html",
    "title": "Namespace Assets.Core.Managers.InputManager.Scripts | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Managers.InputManager.Scripts Classes InputManager"
  },
  "api/Assets.Core.Managers.InputManager.Scripts.InputManager.html": {
    "href": "api/Assets.Core.Managers.InputManager.Scripts.InputManager.html",
    "title": "Class InputManager | Rpg game documentation",
    "keywords": "Class InputManager Inheritance Object InputManager Namespace : Assets.Core.Managers.InputManager.Scripts Assembly : cs.temp.dll.dll Syntax public class InputManager : Manager<InputManager>"
  },
  "api/Assets.Core.Managers.MouseManager.Scripts.EventVector3.html": {
    "href": "api/Assets.Core.Managers.MouseManager.Scripts.EventVector3.html",
    "title": "Class EventVector3 | Rpg game documentation",
    "keywords": "Class EventVector3 Inheritance Object EventVector3 Namespace : Assets.Core.Managers.MouseManager.Scripts Assembly : cs.temp.dll.dll Syntax public class EventVector3 : UnityEvent<Vector3>"
  },
  "api/Assets.Core.Managers.MouseManager.Scripts.html": {
    "href": "api/Assets.Core.Managers.MouseManager.Scripts.html",
    "title": "Namespace Assets.Core.Managers.MouseManager.Scripts | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Managers.MouseManager.Scripts Classes EventVector3 MouseManager"
  },
  "api/Assets.Core.Managers.MouseManager.Scripts.MouseManager.html": {
    "href": "api/Assets.Core.Managers.MouseManager.Scripts.MouseManager.html",
    "title": "Class MouseManager | Rpg game documentation",
    "keywords": "Class MouseManager Inheritance Object MouseManager Namespace : Assets.Core.Managers.MouseManager.Scripts Assembly : cs.temp.dll.dll Syntax public class MouseManager : MonoBehaviour Fields clickableLayer Declaration public LayerMask clickableLayer Field Value Type Description LayerMask doorway Declaration public Texture2D doorway Field Value Type Description Texture2D OnClickEnvironment Declaration public EventVector3 OnClickEnvironment Field Value Type Description EventVector3 pointer Declaration public Texture2D pointer Field Value Type Description Texture2D target Declaration public Texture2D target Field Value Type Description Texture2D"
  },
  "api/Assets.Core.Managers.UIManager.Scripts.html": {
    "href": "api/Assets.Core.Managers.UIManager.Scripts.html",
    "title": "Namespace Assets.Core.Managers.UIManager.Scripts | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Managers.UIManager.Scripts Classes InputText UIManager"
  },
  "api/Assets.Core.Managers.UIManager.Scripts.InputText.html": {
    "href": "api/Assets.Core.Managers.UIManager.Scripts.InputText.html",
    "title": "Class InputText | Rpg game documentation",
    "keywords": "Class InputText Inheritance Object InputText Namespace : Assets.Core.Managers.UIManager.Scripts Assembly : cs.temp.dll.dll Syntax public class InputText : MonoBehaviour Fields nameValue Declaration public string nameValue Field Value Type Description String Methods onChange() Declaration public void onChange()"
  },
  "api/Assets.Core.Managers.UIManager.Scripts.Menus.AuthMenu.html": {
    "href": "api/Assets.Core.Managers.UIManager.Scripts.Menus.AuthMenu.html",
    "title": "Class AuthMenu | Rpg game documentation",
    "keywords": "Class AuthMenu Inheritance Object AuthMenu Namespace : Assets.Core.Managers.UIManager.Scripts.Menus Assembly : cs.temp.dll.dll Syntax public class AuthMenu : MonoBehaviour"
  },
  "api/Assets.Core.Managers.UIManager.Scripts.Menus.CharacterMenu.html": {
    "href": "api/Assets.Core.Managers.UIManager.Scripts.Menus.CharacterMenu.html",
    "title": "Class CharacterMenu | Rpg game documentation",
    "keywords": "Class CharacterMenu Inheritance Object CharacterMenu Namespace : Assets.Core.Managers.UIManager.Scripts.Menus Assembly : cs.temp.dll.dll Syntax public class CharacterMenu : MonoBehaviour"
  },
  "api/Assets.Core.Managers.UIManager.Scripts.Menus.DialogBehavior.html": {
    "href": "api/Assets.Core.Managers.UIManager.Scripts.Menus.DialogBehavior.html",
    "title": "Class DialogBehavior | Rpg game documentation",
    "keywords": "Class DialogBehavior Inheritance Object DialogBehavior Namespace : Assets.Core.Managers.UIManager.Scripts.Menus Assembly : cs.temp.dll.dll Syntax public class DialogBehavior : MonoBehaviour Methods SetActive(Boolean) Declaration public void SetActive(bool value) Parameters Type Name Description Boolean value SetMessage(String) Declaration public void SetMessage(string message) Parameters Type Name Description String message"
  },
  "api/Assets.Core.Managers.UIManager.Scripts.Menus.html": {
    "href": "api/Assets.Core.Managers.UIManager.Scripts.Menus.html",
    "title": "Namespace Assets.Core.Managers.UIManager.Scripts.Menus | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Managers.UIManager.Scripts.Menus Classes AuthMenu CharacterMenu DialogBehavior LoginMenu MainMenu PauseMenu SignUpMenu WelcomeMenu"
  },
  "api/Assets.Core.Managers.UIManager.Scripts.Menus.LoginMenu.html": {
    "href": "api/Assets.Core.Managers.UIManager.Scripts.Menus.LoginMenu.html",
    "title": "Class LoginMenu | Rpg game documentation",
    "keywords": "Class LoginMenu Inheritance Object LoginMenu Namespace : Assets.Core.Managers.UIManager.Scripts.Menus Assembly : cs.temp.dll.dll Syntax public class LoginMenu : MonoBehaviour"
  },
  "api/Assets.Core.Managers.UIManager.Scripts.Menus.MainMenu.html": {
    "href": "api/Assets.Core.Managers.UIManager.Scripts.Menus.MainMenu.html",
    "title": "Class MainMenu | Rpg game documentation",
    "keywords": "Class MainMenu Inheritance Object MainMenu Namespace : Assets.Core.Managers.UIManager.Scripts.Menus Assembly : cs.temp.dll.dll Syntax public class MainMenu : MonoBehaviour Fields OnMainMenuFadeComplete Declaration public Events.EventFadeComplete OnMainMenuFadeComplete Field Value Type Description Events.EventFadeComplete Methods FadeIn() Declaration public void FadeIn() FadeOut() Declaration public void FadeOut() OnFadeInComplete() Declaration public void OnFadeInComplete() OnFadeOutComplete() Declaration public void OnFadeOutComplete()"
  },
  "api/Assets.Core.Managers.UIManager.Scripts.Menus.PauseMenu.html": {
    "href": "api/Assets.Core.Managers.UIManager.Scripts.Menus.PauseMenu.html",
    "title": "Class PauseMenu | Rpg game documentation",
    "keywords": "Class PauseMenu Inheritance Object PauseMenu Namespace : Assets.Core.Managers.UIManager.Scripts.Menus Assembly : cs.temp.dll.dll Syntax public class PauseMenu : MonoBehaviour"
  },
  "api/Assets.Core.Managers.UIManager.Scripts.Menus.SignUpMenu.html": {
    "href": "api/Assets.Core.Managers.UIManager.Scripts.Menus.SignUpMenu.html",
    "title": "Class SignUpMenu | Rpg game documentation",
    "keywords": "Class SignUpMenu Inheritance Object SignUpMenu Namespace : Assets.Core.Managers.UIManager.Scripts.Menus Assembly : cs.temp.dll.dll Syntax public class SignUpMenu : MonoBehaviour"
  },
  "api/Assets.Core.Managers.UIManager.Scripts.Menus.WelcomeMenu.html": {
    "href": "api/Assets.Core.Managers.UIManager.Scripts.Menus.WelcomeMenu.html",
    "title": "Class WelcomeMenu | Rpg game documentation",
    "keywords": "Class WelcomeMenu Inheritance Object WelcomeMenu Namespace : Assets.Core.Managers.UIManager.Scripts.Menus Assembly : cs.temp.dll.dll Syntax public class WelcomeMenu : MonoBehaviour"
  },
  "api/Assets.Core.Managers.UIManager.Scripts.UIManager.html": {
    "href": "api/Assets.Core.Managers.UIManager.Scripts.UIManager.html",
    "title": "Class UIManager | Rpg game documentation",
    "keywords": "Class UIManager Inheritance Object UIManager Namespace : Assets.Core.Managers.UIManager.Scripts Assembly : cs.temp.dll.dll Syntax public class UIManager : Manager<UIManager> Fields OnMainMenuFadeComplete Declaration public Events.EventFadeComplete OnMainMenuFadeComplete Field Value Type Description Events.EventFadeComplete Methods SetDummyCameraActive(Boolean) Declaration public void SetDummyCameraActive(bool active) Parameters Type Name Description Boolean active"
  },
  "api/Assets.Core.Mappers.CharacterClassToStringMapper.html": {
    "href": "api/Assets.Core.Mappers.CharacterClassToStringMapper.html",
    "title": "Class CharacterClassToStringMapper | Rpg game documentation",
    "keywords": "Class CharacterClassToStringMapper Inheritance Object CharacterClassToStringMapper Implements IMapper < CharacterClass , String > Namespace : Assets.Core.Mappers Assembly : cs.temp.dll.dll Syntax public class CharacterClassToStringMapper : IMapper<CharacterClass, string> Methods Map(CharacterClass) Declaration public string Map(CharacterClass input) Parameters Type Name Description CharacterClass input Returns Type Description String Implements IMapper<TInput, TOutput>"
  },
  "api/Assets.Core.Mappers.html": {
    "href": "api/Assets.Core.Mappers.html",
    "title": "Namespace Assets.Core.Mappers | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Mappers Classes CharacterClassToStringMapper WeaponTypeToStringMapper Interfaces IMapper<TInput, TOutput>"
  },
  "api/Assets.Core.Mappers.IMapper-2.html": {
    "href": "api/Assets.Core.Mappers.IMapper-2.html",
    "title": "Interface IMapper<TInput, TOutput> | Rpg game documentation",
    "keywords": "Interface IMapper<TInput, TOutput> Namespace : Assets.Core.Mappers Assembly : cs.temp.dll.dll Syntax public interface IMapper<in TInput, out TOutput> Type Parameters Name Description TInput TOutput Methods Map(TInput) Declaration TOutput Map(TInput input) Parameters Type Name Description TInput input Returns Type Description TOutput"
  },
  "api/Assets.Core.Mappers.WeaponTypeToStringMapper.html": {
    "href": "api/Assets.Core.Mappers.WeaponTypeToStringMapper.html",
    "title": "Class WeaponTypeToStringMapper | Rpg game documentation",
    "keywords": "Class WeaponTypeToStringMapper Inheritance Object WeaponTypeToStringMapper Implements IMapper < WeaponType , String > Namespace : Assets.Core.Mappers Assembly : cs.temp.dll.dll Syntax public class WeaponTypeToStringMapper : IMapper<WeaponType, string> Methods Map(WeaponType) Declaration public string Map(WeaponType input) Parameters Type Name Description WeaponType input Returns Type Description String Implements IMapper<TInput, TOutput>"
  },
  "api/Assets.Core.Models.Character.html": {
    "href": "api/Assets.Core.Models.Character.html",
    "title": "Class Character | Rpg game documentation",
    "keywords": "Class Character Inheritance Object Character Namespace : Assets.Core.Models Assembly : cs.temp.dll.dll Syntax public class Character Properties Armor Declaration public int Armor { get; set; } Property Value Type Description Int32 Boots Declaration public Item Boots { get; set; } Property Value Type Description Item Cape Declaration public Item Cape { get; set; } Property Value Type Description Item Dexterity Declaration public int Dexterity { get; set; } Property Value Type Description Int32 Experience Declaration public int Experience { get; set; } Property Value Type Description Int32 Health Declaration public int Health { get; set; } Property Value Type Description Int32 Id Declaration public string Id { get; set; } Property Value Type Description String Intelligence Declaration public int Intelligence { get; set; } Property Value Type Description Int32 Level Declaration public int Level { get; set; } Property Value Type Description Int32 Luck Declaration public int Luck { get; set; } Property Value Type Description Int32 MovementSpeed Declaration public int MovementSpeed { get; set; } Property Value Type Description Int32 Strength Declaration public int Strength { get; set; } Property Value Type Description Int32 Suit Declaration public Item Suit { get; set; } Property Value Type Description Item Weapon Declaration public Item Weapon { get; set; } Property Value Type Description Item"
  },
  "api/Assets.Core.Models.CharacterInfo.html": {
    "href": "api/Assets.Core.Models.CharacterInfo.html",
    "title": "Class CharacterInfo | Rpg game documentation",
    "keywords": "Class CharacterInfo Inheritance Object CharacterInfo Namespace : Assets.Core.Models Assembly : cs.temp.dll.dll Syntax public class CharacterInfo"
  },
  "api/Assets.Core.Models.html": {
    "href": "api/Assets.Core.Models.html",
    "title": "Namespace Assets.Core.Models | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Models Classes Character CharacterInfo Item User Weapon"
  },
  "api/Assets.Core.Models.Item.html": {
    "href": "api/Assets.Core.Models.Item.html",
    "title": "Class Item | Rpg game documentation",
    "keywords": "Class Item Inheritance Object Item Namespace : Assets.Core.Models Assembly : cs.temp.dll.dll Syntax public class Item Properties Id Declaration public string Id { get; set; } Property Value Type Description String Level Declaration public int Level { get; set; } Property Value Type Description Int32 Name Declaration public string Name { get; set; } Property Value Type Description String"
  },
  "api/Assets.Core.Models.User.html": {
    "href": "api/Assets.Core.Models.User.html",
    "title": "Class User | Rpg game documentation",
    "keywords": "Class User Inheritance Object User Namespace : Assets.Core.Models Assembly : cs.temp.dll.dll Syntax public class User Properties Id Declaration public string Id { get; set; } Property Value Type Description String RefreshToken Declaration public string RefreshToken { get; set; } Property Value Type Description String Token Declaration public string Token { get; set; } Property Value Type Description String Username Declaration public string Username { get; set; } Property Value Type Description String Methods Log() Declaration public void Log()"
  },
  "api/Assets.Core.Models.Weapon.html": {
    "href": "api/Assets.Core.Models.Weapon.html",
    "title": "Class Weapon | Rpg game documentation",
    "keywords": "Class Weapon Inheritance Object Weapon Namespace : Assets.Core.Models Assembly : cs.temp.dll.dll Syntax public class Weapon"
  },
  "api/Assets.Core.Rest.Helpers.Common.html": {
    "href": "api/Assets.Core.Rest.Helpers.Common.html",
    "title": "Class Common | Rpg game documentation",
    "keywords": "Class Common Inheritance Object Common Namespace : Assets.Core.Rest.Helpers Assembly : cs.temp.dll.dll Syntax public static class Common Methods SendWebRequestWithOptions(UnityWebRequest, RequestHelper) Send the web request to the server Declaration public static AsyncOperation SendWebRequestWithOptions(this UnityWebRequest request, RequestHelper options) Parameters Type Name Description UnityWebRequest request An UnityWebRequest object. RequestHelper options An options object. Returns Type Description AsyncOperation An AsyncOperation object."
  },
  "api/Assets.Core.Rest.Helpers.html": {
    "href": "api/Assets.Core.Rest.Helpers.html",
    "title": "Namespace Assets.Core.Rest.Helpers | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Rest.Helpers Classes Common HttpBase JsonHelper RequestException RequestHelper ResponseHelper RestClientExtensions StaticCoroutine"
  },
  "api/Assets.Core.Rest.Helpers.HttpBase.html": {
    "href": "api/Assets.Core.Rest.Helpers.HttpBase.html",
    "title": "Class HttpBase | Rpg game documentation",
    "keywords": "Class HttpBase Inheritance Object HttpBase Namespace : Assets.Core.Rest.Helpers Assembly : cs.temp.dll.dll Syntax public static class HttpBase Methods CreateRequestAndRetry(RequestHelper, Action<RequestException, ResponseHelper>) Declaration public static IEnumerator CreateRequestAndRetry(RequestHelper options, Action<RequestException, ResponseHelper> callback) Parameters Type Name Description RequestHelper options Action < RequestException , ResponseHelper > callback Returns Type Description IEnumerator DefaultUnityWebRequest(RequestHelper, Action<RequestException, ResponseHelper>) Declaration public static IEnumerator DefaultUnityWebRequest(RequestHelper options, Action<RequestException, ResponseHelper> callback) Parameters Type Name Description RequestHelper options Action < RequestException , ResponseHelper > callback Returns Type Description IEnumerator DefaultUnityWebRequest<TResponse>(RequestHelper, Action<RequestException, ResponseHelper, TResponse[]>) Declaration public static IEnumerator DefaultUnityWebRequest<TResponse>(RequestHelper options, Action<RequestException, ResponseHelper, TResponse[]> callback) Parameters Type Name Description RequestHelper options Action < RequestException , ResponseHelper , TResponse[]> callback Returns Type Description IEnumerator Type Parameters Name Description TResponse DefaultUnityWebRequest<TResponse>(RequestHelper, Action<RequestException, ResponseHelper, TResponse>) Declaration public static IEnumerator DefaultUnityWebRequest<TResponse>(RequestHelper options, Action<RequestException, ResponseHelper, TResponse> callback) Parameters Type Name Description RequestHelper options Action < RequestException , ResponseHelper , TResponse> callback Returns Type Description IEnumerator Type Parameters Name Description TResponse"
  },
  "api/Assets.Core.Rest.Helpers.JsonHelper.html": {
    "href": "api/Assets.Core.Rest.Helpers.JsonHelper.html",
    "title": "Class JsonHelper | Rpg game documentation",
    "keywords": "Class JsonHelper Inheritance Object JsonHelper Namespace : Assets.Core.Rest.Helpers Assembly : cs.temp.dll.dll Syntax public static class JsonHelper Methods ArrayFromJson<T>(String) Get an array of objects when the response is an array \"[]\" instead of a valid JSON \"{}\" Declaration public static T[] ArrayFromJson<T>(string json) Parameters Type Name Description String json An array returned from the server. Returns Type Description T[] An array of objects. Type Parameters Name Description T The element type of the array. ArrayToJsonString<T>(T[]) Declaration public static string ArrayToJsonString<T>(T[] array) Parameters Type Name Description T[] array Returns Type Description String Type Parameters Name Description T ArrayToJsonString<T>(T[], Boolean) Declaration public static string ArrayToJsonString<T>(T[] array, bool prettyPrint) Parameters Type Name Description T[] array Boolean prettyPrint Returns Type Description String Type Parameters Name Description T FromJsonString<T>(String) Declaration public static T[] FromJsonString<T>(string json) Parameters Type Name Description String json Returns Type Description T[] Type Parameters Name Description T"
  },
  "api/Assets.Core.Rest.Helpers.RequestException.html": {
    "href": "api/Assets.Core.Rest.Helpers.RequestException.html",
    "title": "Class RequestException | Rpg game documentation",
    "keywords": "Class RequestException Inheritance Object RequestException Namespace : Assets.Core.Rest.Helpers Assembly : cs.temp.dll.dll Syntax public class RequestException : Exception Constructors RequestException() Declaration public RequestException() RequestException(RequestHelper, String, Boolean, Boolean, Int64, String) Declaration public RequestException(RequestHelper request, string message, bool isHttpError, bool isNetworkError, long statusCode, string response) Parameters Type Name Description RequestHelper request String message Boolean isHttpError Boolean isNetworkError Int64 statusCode String response RequestException(String) Declaration public RequestException(string message) Parameters Type Name Description String message Properties IsHttpError Declaration public bool IsHttpError { get; } Property Value Type Description Boolean IsNetworkError Declaration public bool IsNetworkError { get; } Property Value Type Description Boolean Request Declaration public RequestHelper Request { get; } Property Value Type Description RequestHelper Response Declaration public string Response { get; set; } Property Value Type Description String ServerMessage Declaration public string ServerMessage { get; set; } Property Value Type Description String StatusCode Declaration public long StatusCode { get; } Property Value Type Description Int64"
  },
  "api/Assets.Core.Rest.Helpers.RequestHelper.html": {
    "href": "api/Assets.Core.Rest.Helpers.RequestHelper.html",
    "title": "Class RequestHelper | Rpg game documentation",
    "keywords": "Class RequestHelper Inheritance Object RequestHelper Namespace : Assets.Core.Rest.Helpers Assembly : cs.temp.dll.dll Syntax public class RequestHelper Properties Body The data to send to the server, encoding the body with JsonUtility Declaration public object Body { get; set; } Property Value Type Description Object BodyRaw The data as byte array to send to the server Declaration public byte[] BodyRaw { get; set; } Property Value Type Description Byte [] BodyString The data serialized as string to send to the web server (Using other tools instead of JsonUtility) Declaration public string BodyString { get; set; } Property Value Type Description String ChunkedTransfer Indicates whether the UnityWebRequest system should employ the HTTP/1.1 chunked-transfer encoding method. Declaration public bool? ChunkedTransfer { get; set; } Property Value Type Description Nullable < Boolean > ContentType Override the content type of the request manually Declaration public string ContentType { get; set; } Property Value Type Description String DefaultContentType Enable or Disable Content Type JSON by default Declaration public bool DefaultContentType { get; set; } Property Value Type Description Boolean Check if application/json is enabled by default DownloadedBytes Returns the number of bytes of body data the system has downloaded from the remote server. (Read Only) Declaration public ulong DownloadedBytes { get; } Property Value Type Description UInt64 DownloadHandler Holds a reference to a DownloadHandler object, which manages body data received from the remote server by this UnityWebRequest. Declaration public DownloadHandler DownloadHandler { get; set; } Property Value Type Description DownloadHandler DownloadProgress Returns a floating-point value between 0.0 and 1.0, indicating the progress of downloading body data from the server. (Read Only) Declaration public float DownloadProgress { get; } Property Value Type Description Single EnableDebug Enable logs of the requests for debug mode Declaration public bool EnableDebug { get; set; } Property Value Type Description Boolean FormData The form data to send to the web server using WWWForm Declaration public WWWForm FormData { get; set; } Property Value Type Description WWWForm FormSections The form data to send to the web server using IMultipartFormSection Declaration public List<IMultipartFormSection> FormSections { get; set; } Property Value Type Description List < IMultipartFormSection > Headers The HTTP headers added manually to send with the request Declaration public Dictionary<string, string> Headers { get; set; } Property Value Type Description Dictionary < String , String > IgnoreHttpException Prevent to catch http exceptions Declaration public bool IgnoreHttpException { get; set; } Property Value Type Description Boolean IsAborted Check if the request was aborted Declaration public bool IsAborted { get; set; } Property Value Type Description Boolean A boolean to know if the request was aborted by the user Method Defines the HTTP verb used by this UnityWebRequest, such as GET or POST. Declaration public string Method { get; set; } Property Value Type Description String Params The HTTP query string params to send with the request Declaration public Dictionary<string, string> Params { get; set; } Property Value Type Description Dictionary < String , String > ParseResponseBody Whether to parse the response body as JSON or not. Note: parsing a large non-text file will have severe performance impact. Declaration public bool ParseResponseBody { get; set; } Property Value Type Description Boolean ProgressCallback A callback executed everytime the requests progress changes (From 0 to 1) Declaration public Action<float> ProgressCallback { get; set; } Property Value Type Description Action < Single > RedirectLimit Indicates the number of redirects which this UnityWebRequest will follow before halting with a “Redirect Limit Exceeded” system error. Declaration public int? RedirectLimit { get; set; } Property Value Type Description Nullable < Int32 > Request Internal use Declaration public UnityWebRequest Request { set; } Property Value Type Description UnityWebRequest Retries The number of retries of the request Declaration public int Retries { get; set; } Property Value Type Description Int32 RetryCallback A callback executed before to retry a request Declaration public Action<RequestException, int> RetryCallback { get; set; } Property Value Type Description Action < RequestException , Int32 > RetryCallbackOnlyOnNetworkErrors Invoke RetryCallack only when the retry is provoked by a network error. (Default: true). Declaration public bool RetryCallbackOnlyOnNetworkErrors { get; set; } Property Value Type Description Boolean RetrySecondsDelay Seconds of delay to make a retry Declaration public float RetrySecondsDelay { get; set; } Property Value Type Description Single SimpleForm The form data to send to the web server using Dictionary Declaration public Dictionary<string, string> SimpleForm { get; set; } Property Value Type Description Dictionary < String , String > Timeout Sets UnityWebRequest to attempt to abort after the number of seconds in timeout have passed. Declaration public int? Timeout { get; set; } Property Value Type Description Nullable < Int32 > UploadedBytes Returns the number of bytes of body data the system has uploaded to the remote server. (Read Only) Declaration public ulong UploadedBytes { get; } Property Value Type Description UInt64 UploadHandler Holds a reference to the UploadHandler object which manages body data to be uploaded to the remote server. Declaration public UploadHandler UploadHandler { get; set; } Property Value Type Description UploadHandler UploadProgress Returns a floating-point value between 0.0 and 1.0, indicating the progress of uploading body data to the server. Declaration public float UploadProgress { get; } Property Value Type Description Single Uri Defines the target URL for the UnityWebRequest to communicate with Declaration public string Uri { get; set; } Property Value Type Description String UseHttpContinue Determines whether this UnityWebRequest will include Expect: 100-Continue in its outgoing request headers. (Default: true). Declaration public bool? UseHttpContinue { get; set; } Property Value Type Description Nullable < Boolean > Methods Abort() Abort the request manually Declaration public void Abort() GetHeader(String) Get the value of a header Declaration public string GetHeader(string name) Parameters Type Name Description String name The name of the header. Returns Type Description String The string value of the header."
  },
  "api/Assets.Core.Rest.Helpers.ResponseHelper.html": {
    "href": "api/Assets.Core.Rest.Helpers.ResponseHelper.html",
    "title": "Class ResponseHelper | Rpg game documentation",
    "keywords": "Class ResponseHelper Inheritance Object ResponseHelper Namespace : Assets.Core.Rest.Helpers Assembly : cs.temp.dll.dll Syntax public class ResponseHelper Constructors ResponseHelper(UnityWebRequest) Declaration public ResponseHelper(UnityWebRequest request) Parameters Type Name Description UnityWebRequest request Properties Data Returns the raw bytes downloaded from the remote server, or null. Declaration public byte[] Data { get; } Property Value Type Description Byte [] Error A human-readable string describing any system errors encountered by the UnityWebRequest object of this response while handling HTTP requests or responses. Declaration public string Error { get; } Property Value Type Description String Headers Get response headers Declaration public Dictionary<string, string> Headers { get; } Property Value Type Description Dictionary < String , String > Request The UnityWebRequest used in the current request. Declaration public UnityWebRequest Request { get; } Property Value Type Description UnityWebRequest StatusCode The numeric HTTP response code returned by the server. Declaration public long StatusCode { get; } Property Value Type Description Int64 Text Returns the bytes from data interpreted as a UTF8 string. Declaration public string Text { get; } Property Value Type Description String Methods GetHeader(String) Get the value of a header Declaration public string GetHeader(string name) Parameters Type Name Description String name The name of the header. Returns Type Description String The string value of the header. ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString()"
  },
  "api/Assets.Core.Rest.Helpers.RestClientExtensions.html": {
    "href": "api/Assets.Core.Rest.Helpers.RestClientExtensions.html",
    "title": "Class RestClientExtensions | Rpg game documentation",
    "keywords": "Class RestClientExtensions Inheritance Object RestClientExtensions Namespace : Assets.Core.Rest.Helpers Assembly : cs.temp.dll.dll Syntax public static class RestClientExtensions Methods BuildUrl(String, Dictionary<String, String>) Generate the url and escape params Declaration public static string BuildUrl(this string uri, Dictionary<string, string> queryParams) Parameters Type Name Description String uri The URI of the resource to retrieve via HTTP. Dictionary < String , String > queryParams Query string parameters. Returns Type Description String The full url with query string params. CreateWebResponse(UnityWebRequest) Create an object with the response of the server Declaration public static ResponseHelper CreateWebResponse(this UnityWebRequest request) Parameters Type Name Description UnityWebRequest request An UnityWebRequest object. Returns Type Description ResponseHelper An object with the response. EscapeURL(String) Escapes characters in a string to ensure they are URL-friendly Declaration public static string EscapeURL(this string queryParam) Parameters Type Name Description String queryParam A query string param Returns Type Description String Escaped query string param. IsValidRequest(UnityWebRequest, RequestHelper) Validate if the request is OK with the current options Declaration public static bool IsValidRequest(this UnityWebRequest request, RequestHelper options) Parameters Type Name Description UnityWebRequest request An UnityWebRequest object. RequestHelper options The options of the request. Returns Type Description Boolean A boolean that indicates if the request is valid."
  },
  "api/Assets.Core.Rest.Helpers.StaticCoroutine.html": {
    "href": "api/Assets.Core.Rest.Helpers.StaticCoroutine.html",
    "title": "Class StaticCoroutine | Rpg game documentation",
    "keywords": "Class StaticCoroutine Inheritance Object StaticCoroutine Namespace : Assets.Core.Rest.Helpers Assembly : cs.temp.dll.dll Syntax public static class StaticCoroutine Methods StartCoroutine(IEnumerator) Declaration public static Coroutine StartCoroutine(IEnumerator coroutine) Parameters Type Name Description IEnumerator coroutine Returns Type Description Coroutine"
  },
  "api/Assets.Core.Rest.html": {
    "href": "api/Assets.Core.Rest.html",
    "title": "Namespace Assets.Core.Rest | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Rest Classes RestClient"
  },
  "api/Assets.Core.Rest.RestClient.html": {
    "href": "api/Assets.Core.Rest.RestClient.html",
    "title": "Class RestClient | Rpg game documentation",
    "keywords": "Class RestClient Inheritance Object RestClient Namespace : Assets.Core.Rest Assembly : cs.temp.dll.dll Syntax public static class RestClient Properties DefaultRequestHeaders Declaration public static Dictionary<string, string> DefaultRequestHeaders { get; set; } Property Value Type Description Dictionary < String , String > DefaultRequestParams Declaration public static Dictionary<string, string> DefaultRequestParams { get; set; } Property Value Type Description Dictionary < String , String > Version Gets the version of the RestClient library. Declaration public static Version Version { get; } Property Value Type Description Version Methods ClearDefaultHeaders() Clear default headers. Declaration public static void ClearDefaultHeaders() ClearDefaultParams() Clear default query string params. Declaration public static void ClearDefaultParams() Delete(RequestHelper) Delete the specified resource identified by the URI. Declaration public static IPromise<ResponseHelper> Delete(RequestHelper options) Parameters Type Name Description RequestHelper options The options of the request. Returns Type Description IPromise < ResponseHelper > Returns a promise for a value of type ResponseHelper. Delete(RequestHelper, Action<RequestException, ResponseHelper>) Delete the specified resource identified by the URI. Declaration public static void Delete(RequestHelper options, Action<RequestException, ResponseHelper> callback) Parameters Type Name Description RequestHelper options The options of the request. Action < RequestException , ResponseHelper > callback A callback function that is executed when the request is finished. Delete(String) Delete the specified resource identified by the URI. Declaration public static IPromise<ResponseHelper> Delete(string url) Parameters Type Name Description String url A string containing the URL to which the request is sent. Returns Type Description IPromise < ResponseHelper > Returns a promise for a value of type ResponseHelper. Delete(String, Action<RequestException, ResponseHelper>) Delete the specified resource identified by the URI. Declaration public static void Delete(string url, Action<RequestException, ResponseHelper> callback) Parameters Type Name Description String url A string containing the URL to which the request is sent. Action < RequestException , ResponseHelper > callback A callback function that is executed when the request is finished. Get(RequestHelper) Load data from the server using a HTTP GET request. Declaration public static IPromise<ResponseHelper> Get(RequestHelper options) Parameters Type Name Description RequestHelper options The options of the request. Returns Type Description IPromise < ResponseHelper > Returns a promise for a value of type ResponseHelper. Get(RequestHelper, Action<RequestException, ResponseHelper>) Load data from the server using a HTTP GET request. Declaration public static void Get(RequestHelper options, Action<RequestException, ResponseHelper> callback) Parameters Type Name Description RequestHelper options The options of the request. Action < RequestException , ResponseHelper > callback A callback function that is executed when the request is finished. Get(String) Load data from the server using a HTTP GET request. Declaration public static IPromise<ResponseHelper> Get(string url) Parameters Type Name Description String url A string containing the URL to which the request is sent. Returns Type Description IPromise < ResponseHelper > Returns a promise for a value of type ResponseHelper. Get(String, Action<RequestException, ResponseHelper>) Load data from the server using a HTTP GET request. Declaration public static void Get(string url, Action<RequestException, ResponseHelper> callback) Parameters Type Name Description String url A string containing the URL to which the request is sent. Action < RequestException , ResponseHelper > callback A callback function that is executed when the request is finished. Get<T>(RequestHelper) Load data from the server using a HTTP GET request. Declaration public static IPromise<T> Get<T>(RequestHelper options) Parameters Type Name Description RequestHelper options The options of the request. Returns Type Description IPromise <T> Returns a promise for a value of a specified type. Type Parameters Name Description T The element type of the response. Get<T>(RequestHelper, Action<RequestException, ResponseHelper, T>) Load data from the server using a HTTP GET request. Declaration public static void Get<T>(RequestHelper options, Action<RequestException, ResponseHelper, T> callback) Parameters Type Name Description RequestHelper options The options of the request. Action < RequestException , ResponseHelper , T> callback A callback function that is executed when the request is finished. Type Parameters Name Description T The element type of the response. Get<T>(String) Load data from the server using a HTTP GET request. Declaration public static IPromise<T> Get<T>(string url) Parameters Type Name Description String url A string containing the URL to which the request is sent. Returns Type Description IPromise <T> Returns a promise for a value of a specified type. Type Parameters Name Description T The element type of the response. Get<T>(String, Action<RequestException, ResponseHelper, T>) Load data from the server using a HTTP GET request. Declaration public static void Get<T>(string url, Action<RequestException, ResponseHelper, T> callback) Parameters Type Name Description String url A string containing the URL to which the request is sent. Action < RequestException , ResponseHelper , T> callback A callback function that is executed when the request is finished. Type Parameters Name Description T The element type of the response. GetArray<T>(RequestHelper) Load data from the server using a HTTP GET request. Declaration public static IPromise<T[]> GetArray<T>(RequestHelper options) Parameters Type Name Description RequestHelper options The options of the request. Returns Type Description IPromise <T[]> Returns a promise for an array of values. Type Parameters Name Description T The element type of the array. GetArray<T>(RequestHelper, Action<RequestException, ResponseHelper, T[]>) Load a JSON array from the server using a HTTP GET request Declaration public static void GetArray<T>(RequestHelper options, Action<RequestException, ResponseHelper, T[]> callback) Parameters Type Name Description RequestHelper options The options of the request. Action < RequestException , ResponseHelper , T[]> callback A callback function that is executed when the request is finished. Type Parameters Name Description T The element type of the array. GetArray<T>(String) Load data from the server using a HTTP GET request. Declaration public static IPromise<T[]> GetArray<T>(string url) Parameters Type Name Description String url A string containing the URL to which the request is sent. Returns Type Description IPromise <T[]> Returns a promise for an array of values. Type Parameters Name Description T The element type of the array. GetArray<T>(String, Action<RequestException, ResponseHelper, T[]>) Load a JSON array from the server using a HTTP GET request Declaration public static void GetArray<T>(string url, Action<RequestException, ResponseHelper, T[]> callback) Parameters Type Name Description String url A string containing the URL to which the request is sent. Action < RequestException , ResponseHelper , T[]> callback A callback function that is executed when the request is finished. Type Parameters Name Description T The element type of the array. Head(RequestHelper) Requests the headers that are returned from the server Declaration public static IPromise<ResponseHelper> Head(RequestHelper options) Parameters Type Name Description RequestHelper options The options of the request. Returns Type Description IPromise < ResponseHelper > Returns a promise for a value of type ResponseHelper. Head(RequestHelper, Action<RequestException, ResponseHelper>) Request the headers that are returned from the server Declaration public static void Head(RequestHelper options, Action<RequestException, ResponseHelper> callback) Parameters Type Name Description RequestHelper options The options of the request. Action < RequestException , ResponseHelper > callback A callback function that is executed when the request is finished. Head(String) Requests the headers that are returned from the server Declaration public static IPromise<ResponseHelper> Head(string url) Parameters Type Name Description String url A string containing the URL to which the request is sent. Returns Type Description IPromise < ResponseHelper > Returns a promise for a value of type ResponseHelper. Head(String, Action<RequestException, ResponseHelper>) Request the headers that are returned from the server Declaration public static void Head(string url, Action<RequestException, ResponseHelper> callback) Parameters Type Name Description String url A string containing the URL to which the request is sent. Action < RequestException , ResponseHelper > callback A callback function that is executed when the request is finished. Post(RequestHelper) Load data from the server using a HTTP POST request. Declaration public static IPromise<ResponseHelper> Post(RequestHelper options) Parameters Type Name Description RequestHelper options The options of the request. Returns Type Description IPromise < ResponseHelper > Returns a promise for a value of type ResponseHelper. Post(RequestHelper, Action<RequestException, ResponseHelper>) Load data from the server using a HTTP POST request. Declaration public static void Post(RequestHelper options, Action<RequestException, ResponseHelper> callback) Parameters Type Name Description RequestHelper options The options of the request. Action < RequestException , ResponseHelper > callback A callback function that is executed when the request is finished. Post(String, Object) Load data from the server using a HTTP POST request. Declaration public static IPromise<ResponseHelper> Post(string url, object body) Parameters Type Name Description String url A string containing the URL to which the request is sent. Object body A plain object that is sent to the server with the request. Returns Type Description IPromise < ResponseHelper > Returns a promise for a value of type ResponseHelper. Post(String, Object, Action<RequestException, ResponseHelper>) Load data from the server using a HTTP POST request. Declaration public static void Post(string url, object body, Action<RequestException, ResponseHelper> callback) Parameters Type Name Description String url A string containing the URL to which the request is sent. Object body A plain object that is sent to the server with the request. Action < RequestException , ResponseHelper > callback A callback function that is executed when the request is finished. Post(String, String) Load data from the server using a HTTP POST request. Declaration public static IPromise<ResponseHelper> Post(string url, string bodyString) Parameters Type Name Description String url A string containing the URL to which the request is sent. String bodyString A string that is sent to the server with the request. Returns Type Description IPromise < ResponseHelper > Returns a promise for a value of type ResponseHelper. Post(String, String, Action<RequestException, ResponseHelper>) Load data from the server using a HTTP POST request. Declaration public static void Post(string url, string bodyString, Action<RequestException, ResponseHelper> callback) Parameters Type Name Description String url A string containing the URL to which the request is sent. String bodyString A string that is sent to the server with the request. Action < RequestException , ResponseHelper > callback A callback function that is executed when the request is finished. Post<T>(RequestHelper) Load data from the server using a HTTP POST request. Declaration public static IPromise<T> Post<T>(RequestHelper options) Parameters Type Name Description RequestHelper options The options of the request. Returns Type Description IPromise <T> Returns a promise for a value of a specified type. Type Parameters Name Description T The element type of the response. Post<T>(RequestHelper, Action<RequestException, ResponseHelper, T>) Load data from the server using a HTTP POST request. Declaration public static void Post<T>(RequestHelper options, Action<RequestException, ResponseHelper, T> callback) Parameters Type Name Description RequestHelper options The options of the request. Action < RequestException , ResponseHelper , T> callback A callback function that is executed when the request is finished. Type Parameters Name Description T The element type of the response. Post<T>(String, Object) Load data from the server using a HTTP POST request. Declaration public static IPromise<T> Post<T>(string url, object body) Parameters Type Name Description String url A string containing the URL to which the request is sent. Object body A plain object that is sent to the server with the request. Returns Type Description IPromise <T> Returns a promise for a value of a specified type. Type Parameters Name Description T The element type of the response. Post<T>(String, Object, Action<RequestException, ResponseHelper, T>) Load data from the server using a HTTP POST request. Declaration public static void Post<T>(string url, object body, Action<RequestException, ResponseHelper, T> callback) Parameters Type Name Description String url A string containing the URL to which the request is sent. Object body A plain object that is sent to the server with the request. Action < RequestException , ResponseHelper , T> callback A callback function that is executed when the request is finished. Type Parameters Name Description T The element type of the response. Post<T>(String, String) Load data from the server using a HTTP POST request. Declaration public static IPromise<T> Post<T>(string url, string bodyString) Parameters Type Name Description String url A string containing the URL to which the request is sent. String bodyString A string that is sent to the server with the request. Returns Type Description IPromise <T> Returns a promise for a value of a specified type. Type Parameters Name Description T The element type of the response. Post<T>(String, String, Action<RequestException, ResponseHelper, T>) Load data from the server using a HTTP POST request. Declaration public static void Post<T>(string url, string bodyString, Action<RequestException, ResponseHelper, T> callback) Parameters Type Name Description String url A string containing the URL to which the request is sent. String bodyString A string that is sent to the server with the request. Action < RequestException , ResponseHelper , T> callback A callback function that is executed when the request is finished. Type Parameters Name Description T The element type of the response. PostArray<T>(RequestHelper) Load a JSON array from the server using a HTTP POST request. Declaration public static IPromise<T[]> PostArray<T>(RequestHelper options) Parameters Type Name Description RequestHelper options The options of the request. Returns Type Description IPromise <T[]> Returns a promise for an array of values. Type Parameters Name Description T The element type of the array. PostArray<T>(RequestHelper, Action<RequestException, ResponseHelper, T[]>) Load a JSON array from the server using a HTTP POST request. Declaration public static void PostArray<T>(RequestHelper options, Action<RequestException, ResponseHelper, T[]> callback) Parameters Type Name Description RequestHelper options The options of the request. Action < RequestException , ResponseHelper , T[]> callback A callback function that is executed when the request is finished. Type Parameters Name Description T The element type of the array. PostArray<T>(String, Object) Load a JSON array from the server using a HTTP POST request. Declaration public static IPromise<T[]> PostArray<T>(string url, object body) Parameters Type Name Description String url A string containing the URL to which the request is sent. Object body A plain object that is sent to the server with the request. Returns Type Description IPromise <T[]> Returns a promise for an array of values. Type Parameters Name Description T The element type of the array. PostArray<T>(String, Object, Action<RequestException, ResponseHelper, T[]>) Load a JSON array from the server using a HTTP POST request. Declaration public static void PostArray<T>(string url, object body, Action<RequestException, ResponseHelper, T[]> callback) Parameters Type Name Description String url A string containing the URL to which the request is sent. Object body A plain object that is sent to the server with the request. Action < RequestException , ResponseHelper , T[]> callback A callback function that is executed when the request is finished. Type Parameters Name Description T The element type of the array. PostArray<T>(String, String) Load a JSON array from the server using a HTTP POST request. Declaration public static IPromise<T[]> PostArray<T>(string url, string bodyString) Parameters Type Name Description String url A string containing the URL to which the request is sent. String bodyString A string that is sent to the server with the request. Returns Type Description IPromise <T[]> Returns a promise for an array of values. Type Parameters Name Description T The element type of the array. PostArray<T>(String, String, Action<RequestException, ResponseHelper, T[]>) Load a JSON array from the server using a HTTP POST request. Declaration public static void PostArray<T>(string url, string bodyString, Action<RequestException, ResponseHelper, T[]> callback) Parameters Type Name Description String url A string containing the URL to which the request is sent. String bodyString A string that is sent to the server with the request. Action < RequestException , ResponseHelper , T[]> callback A callback function that is executed when the request is finished. Type Parameters Name Description T The element type of the array. Put(RequestHelper) Load data from the server using a HTTP PUT request. Declaration public static IPromise<ResponseHelper> Put(RequestHelper options) Parameters Type Name Description RequestHelper options The options of the request. Returns Type Description IPromise < ResponseHelper > Returns a promise for a value of type ResponseHelper. Put(RequestHelper, Action<RequestException, ResponseHelper>) Load data from the server using a HTTP PUT request. Declaration public static void Put(RequestHelper options, Action<RequestException, ResponseHelper> callback) Parameters Type Name Description RequestHelper options The options of the request. Action < RequestException , ResponseHelper > callback A callback function that is executed when the request is finished. Put(String, Object) Load data from the server using a HTTP PUT request. Declaration public static IPromise<ResponseHelper> Put(string url, object body) Parameters Type Name Description String url A string containing the URL to which the request is sent. Object body A plain object that is sent to the server with the request. Returns Type Description IPromise < ResponseHelper > Returns a promise for a value of type ResponseHelper. Put(String, Object, Action<RequestException, ResponseHelper>) Load data from the server using a HTTP PUT request. Declaration public static void Put(string url, object body, Action<RequestException, ResponseHelper> callback) Parameters Type Name Description String url A string containing the URL to which the request is sent. Object body A plain object that is sent to the server with the request. Action < RequestException , ResponseHelper > callback A callback function that is executed when the request is finished. Put(String, String) Load data from the server using a HTTP PUT request. Declaration public static IPromise<ResponseHelper> Put(string url, string bodyString) Parameters Type Name Description String url A string containing the URL to which the request is sent. String bodyString A string that is sent to the server with the request. Returns Type Description IPromise < ResponseHelper > Returns a promise for a value of type ResponseHelper. Put(String, String, Action<RequestException, ResponseHelper>) Load data from the server using a HTTP PUT request. Declaration public static void Put(string url, string bodyString, Action<RequestException, ResponseHelper> callback) Parameters Type Name Description String url A string containing the URL to which the request is sent. String bodyString A string that is sent to the server with the request. Action < RequestException , ResponseHelper > callback A callback function that is executed when the request is finished. Put<T>(RequestHelper) Load data from the server using a HTTP PUT request. Declaration public static IPromise<T> Put<T>(RequestHelper options) Parameters Type Name Description RequestHelper options The options of the request. Returns Type Description IPromise <T> Returns a promise for a value of a specified type. Type Parameters Name Description T The element type of the response. Put<T>(RequestHelper, Action<RequestException, ResponseHelper, T>) Load data from the server using a HTTP PUT request. Declaration public static void Put<T>(RequestHelper options, Action<RequestException, ResponseHelper, T> callback) Parameters Type Name Description RequestHelper options The options of the request. Action < RequestException , ResponseHelper , T> callback A callback function that is executed when the request is finished. Type Parameters Name Description T The element type of the response. Put<T>(String, Object) Load data from the server using a HTTP PUT request. Declaration public static IPromise<T> Put<T>(string url, object body) Parameters Type Name Description String url A string containing the URL to which the request is sent. Object body A plain object that is sent to the server with the request. Returns Type Description IPromise <T> Returns a promise for a value of a specified type. Type Parameters Name Description T The element type of the response. Put<T>(String, Object, Action<RequestException, ResponseHelper, T>) Load data from the server using a HTTP PUT request. Declaration public static void Put<T>(string url, object body, Action<RequestException, ResponseHelper, T> callback) Parameters Type Name Description String url A string containing the URL to which the request is sent. Object body A plain object that is sent to the server with the request. Action < RequestException , ResponseHelper , T> callback A callback function that is executed when the request is finished. Type Parameters Name Description T The element type of the response. Put<T>(String, String) Load data from the server using a HTTP PUT request. Declaration public static IPromise<T> Put<T>(string url, string bodyString) Parameters Type Name Description String url A string containing the URL to which the request is sent. String bodyString A string that is sent to the server with the request. Returns Type Description IPromise <T> Returns a promise for a value of a specified type. Type Parameters Name Description T The element type of the response. Put<T>(String, String, Action<RequestException, ResponseHelper, T>) Load data from the server using a HTTP PUT request. Declaration public static void Put<T>(string url, string bodyString, Action<RequestException, ResponseHelper, T> callback) Parameters Type Name Description String url A string containing the URL to which the request is sent. String bodyString A string that is sent to the server with the request. Action < RequestException , ResponseHelper , T> callback A callback function that is executed when the request is finished. Type Parameters Name Description T The element type of the response. Request(RequestHelper) Create an HTTP request and return a promise. Declaration public static IPromise<ResponseHelper> Request(RequestHelper options) Parameters Type Name Description RequestHelper options The options of the request. Returns Type Description IPromise < ResponseHelper > Returns a promise for a value of type ResponseHelper. Request(RequestHelper, Action<RequestException, ResponseHelper>) Create an HTTP request with the specified options and callback. Declaration public static void Request(RequestHelper options, Action<RequestException, ResponseHelper> callback) Parameters Type Name Description RequestHelper options The options of the request. Action < RequestException , ResponseHelper > callback A callback function that is executed when the request is finished. Request<T>(RequestHelper) Create an HTTP request and convert the response. Declaration public static IPromise<T> Request<T>(RequestHelper options) Parameters Type Name Description RequestHelper options The options of the request. Returns Type Description IPromise <T> Returns a promise for a value of a specified type. Type Parameters Name Description T The element type of the response. Request<T>(RequestHelper, Action<RequestException, ResponseHelper, T>) Create an HTTP request with the specified options and callback. Declaration public static void Request<T>(RequestHelper options, Action<RequestException, ResponseHelper, T> callback) Parameters Type Name Description RequestHelper options The options of the request. Action < RequestException , ResponseHelper , T> callback A callback function that is executed when the request is finished. Type Parameters Name Description T The element type of the response."
  },
  "api/Assets.Core.Result.AuthenticationError.html": {
    "href": "api/Assets.Core.Result.AuthenticationError.html",
    "title": "Class AuthenticationError | Rpg game documentation",
    "keywords": "Class AuthenticationError Inheritance Object Error AuthenticationError Implements IError Inherited Members Error.RootError Error.InnerError Error.StackTrace Error.RootErrorStackTrace Namespace : Assets.Core.Result Assembly : cs.temp.dll.dll Syntax public class AuthenticationError : Error, IError Constructors AuthenticationError() Declaration public AuthenticationError() AuthenticationError(Error) Declaration public AuthenticationError(Error innerError) Parameters Type Name Description Error innerError Implements IError"
  },
  "api/Assets.Core.Result.Error.html": {
    "href": "api/Assets.Core.Result.Error.html",
    "title": "Class Error | Rpg game documentation",
    "keywords": "Class Error Inheritance Object Error AuthenticationError Error<TErrorStatus> Implements IError Namespace : Assets.Core.Result Assembly : cs.temp.dll.dll Syntax public abstract class Error : IError Constructors Error() Declaration protected Error() Error(Error) Declaration protected Error(Error innerError) Parameters Type Name Description Error innerError Properties InnerError Declaration public Error InnerError { get; set; } Property Value Type Description Error RootError Declaration public IError RootError { get; } Property Value Type Description IError RootErrorStackTrace Declaration public string RootErrorStackTrace { get; } Property Value Type Description String StackTrace Declaration public string StackTrace { get; } Property Value Type Description String Implements IError"
  },
  "api/Assets.Core.Result.Error-1.html": {
    "href": "api/Assets.Core.Result.Error-1.html",
    "title": "Class Error<TErrorStatus> | Rpg game documentation",
    "keywords": "Class Error<TErrorStatus> Inheritance Object Error Error<TErrorStatus> HttpError RestError Implements IError Inherited Members Error.RootError Error.InnerError Error.StackTrace Error.RootErrorStackTrace Namespace : Assets.Core.Result Assembly : cs.temp.dll.dll Syntax public abstract class Error<TErrorStatus> : Error, IError where TErrorStatus : Enum Type Parameters Name Description TErrorStatus Constructors Error(TErrorStatus) Declaration public Error(TErrorStatus status) Parameters Type Name Description TErrorStatus status Error(TErrorStatus, Error) Declaration public Error(TErrorStatus status, Error innerError) Parameters Type Name Description TErrorStatus status Error innerError Properties Status Declaration public TErrorStatus Status { get; } Property Value Type Description TErrorStatus Implements IError"
  },
  "api/Assets.Core.Result.ErrorExtensions.html": {
    "href": "api/Assets.Core.Result.ErrorExtensions.html",
    "title": "Class ErrorExtensions | Rpg game documentation",
    "keywords": "Class ErrorExtensions Inheritance Object ErrorExtensions Namespace : Assets.Core.Result Assembly : cs.temp.dll.dll Syntax public static class ErrorExtensions Methods GetErrorMessage(RestError) Declaration public static string GetErrorMessage(this RestError error) Parameters Type Name Description RestError error Returns Type Description String"
  },
  "api/Assets.Core.Result.html": {
    "href": "api/Assets.Core.Result.html",
    "title": "Namespace Assets.Core.Result | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Result Classes AuthenticationError Error Error<TErrorStatus> ErrorExtensions HttpError RestClientService RestError Result<TError> Result<TData, TError> Interfaces IError IResult<TError> Enums RestErrorStatus"
  },
  "api/Assets.Core.Result.HttpError.html": {
    "href": "api/Assets.Core.Result.HttpError.html",
    "title": "Class HttpError | Rpg game documentation",
    "keywords": "Class HttpError Inheritance Object Error Error < HttpStatusCode > HttpError Implements IError Inherited Members Error<HttpStatusCode>.Status Error.RootError Error.InnerError Error.StackTrace Error.RootErrorStackTrace Namespace : Assets.Core.Result Assembly : cs.temp.dll.dll Syntax public class HttpError : Error<HttpStatusCode>, IError Constructors HttpError(HttpStatusCode) Declaration public HttpError(HttpStatusCode status) Parameters Type Name Description HttpStatusCode status HttpError(HttpStatusCode, Error) Declaration public HttpError(HttpStatusCode status, Error innerError) Parameters Type Name Description HttpStatusCode status Error innerError Implements IError"
  },
  "api/Assets.Core.Result.IError.html": {
    "href": "api/Assets.Core.Result.IError.html",
    "title": "Interface IError | Rpg game documentation",
    "keywords": "Interface IError Namespace : Assets.Core.Result Assembly : cs.temp.dll.dll Syntax public interface IError Properties InnerError Declaration Error InnerError { get; set; } Property Value Type Description Error RootErrorStackTrace Declaration string RootErrorStackTrace { get; } Property Value Type Description String StackTrace Declaration string StackTrace { get; } Property Value Type Description String"
  },
  "api/Assets.Core.Result.IResult-1.html": {
    "href": "api/Assets.Core.Result.IResult-1.html",
    "title": "Interface IResult<TError> | Rpg game documentation",
    "keywords": "Interface IResult<TError> Namespace : Assets.Core.Result Assembly : cs.temp.dll.dll Syntax public interface IResult<out TError> where TError : IError Type Parameters Name Description TError Properties Error Declaration TError Error { get; } Property Value Type Description TError IsSuccessful Declaration bool IsSuccessful { get; } Property Value Type Description Boolean"
  },
  "api/Assets.Core.Result.RestClientService.html": {
    "href": "api/Assets.Core.Result.RestClientService.html",
    "title": "Class RestClientService | Rpg game documentation",
    "keywords": "Class RestClientService Inheritance Object RestClientService Namespace : Assets.Core.Result Assembly : cs.temp.dll.dll Syntax public class RestClientService : Manager<RestClientService> Methods DeleteAsync<TData>(String, CancellationToken) Declaration public async Task<Result<TData, RestError>> DeleteAsync<TData>(string resource, CancellationToken cancellationToken) Parameters Type Name Description String resource CancellationToken cancellationToken Returns Type Description Task < Result <TData, RestError >> Type Parameters Name Description TData DeleteAsync<TRequest, TData>(String, TRequest, CancellationToken) Declaration public async Task<Result<TData, RestError>> DeleteAsync<TRequest, TData>(string resource, TRequest request, CancellationToken cancellationToken) Parameters Type Name Description String resource TRequest request CancellationToken cancellationToken Returns Type Description Task < Result <TData, RestError >> Type Parameters Name Description TRequest TData GetAsync<TData>(String, CancellationToken) Declaration public async Task<Result<TData, RestError>> GetAsync<TData>(string resource, CancellationToken cancellationToken) Parameters Type Name Description String resource CancellationToken cancellationToken Returns Type Description Task < Result <TData, RestError >> Type Parameters Name Description TData GetAsync<TRequest, TData>(String, TRequest, CancellationToken) Declaration public async Task<Result<TData, RestError>> GetAsync<TRequest, TData>(string resource, TRequest request, CancellationToken cancellationToken) Parameters Type Name Description String resource TRequest request CancellationToken cancellationToken Returns Type Description Task < Result <TData, RestError >> Type Parameters Name Description TRequest TData PatchAsync<TData>(String, CancellationToken) Declaration public async Task<Result<TData, RestError>> PatchAsync<TData>(string resource, CancellationToken cancellationToken) Parameters Type Name Description String resource CancellationToken cancellationToken Returns Type Description Task < Result <TData, RestError >> Type Parameters Name Description TData PatchAsync<TRequest, TData>(String, TRequest, CancellationToken) Declaration public async Task<Result<TData, RestError>> PatchAsync<TRequest, TData>(string resource, TRequest request, CancellationToken cancellationToken) Parameters Type Name Description String resource TRequest request CancellationToken cancellationToken Returns Type Description Task < Result <TData, RestError >> Type Parameters Name Description TRequest TData PostAsync(String, CancellationToken) Declaration public async Task<Result<RestError>> PostAsync(string resource, CancellationToken cancellationToken) Parameters Type Name Description String resource CancellationToken cancellationToken Returns Type Description Task < Result < RestError >> PostAsync<TRequest>(String, TRequest, CancellationToken) Declaration public async Task<Result<RestError>> PostAsync<TRequest>(string resource, TRequest request, CancellationToken cancellationToken) Parameters Type Name Description String resource TRequest request CancellationToken cancellationToken Returns Type Description Task < Result < RestError >> Type Parameters Name Description TRequest PostAsync<TData>(String, CancellationToken) Declaration public async Task<Result<TData, RestError>> PostAsync<TData>(string resource, CancellationToken cancellationToken) Parameters Type Name Description String resource CancellationToken cancellationToken Returns Type Description Task < Result <TData, RestError >> Type Parameters Name Description TData PostAsync<TRequest, TData>(String, TRequest, CancellationToken, Boolean) Declaration public async Task<Result<TData, RestError>> PostAsync<TRequest, TData>(string resource, TRequest request, CancellationToken cancellationToken, bool ignoreBearer = false) Parameters Type Name Description String resource TRequest request CancellationToken cancellationToken Boolean ignoreBearer Returns Type Description Task < Result <TData, RestError >> Type Parameters Name Description TRequest TData PutAsync<TData>(String, CancellationToken) Declaration public async Task<Result<TData, RestError>> PutAsync<TData>(string resource, CancellationToken cancellationToken) Parameters Type Name Description String resource CancellationToken cancellationToken Returns Type Description Task < Result <TData, RestError >> Type Parameters Name Description TData PutAsync<TRequest, TData>(String, TRequest, CancellationToken) Declaration public async Task<Result<TData, RestError>> PutAsync<TRequest, TData>(string resource, TRequest request, CancellationToken cancellationToken) Parameters Type Name Description String resource TRequest request CancellationToken cancellationToken Returns Type Description Task < Result <TData, RestError >> Type Parameters Name Description TRequest TData"
  },
  "api/Assets.Core.Result.RestError.html": {
    "href": "api/Assets.Core.Result.RestError.html",
    "title": "Class RestError | Rpg game documentation",
    "keywords": "Class RestError Inheritance Object Error Error < RestErrorStatus > RestError Implements IError Inherited Members Error<RestErrorStatus>.Status Error.RootError Error.InnerError Error.StackTrace Error.RootErrorStackTrace Namespace : Assets.Core.Result Assembly : cs.temp.dll.dll Syntax public class RestError : Error<RestErrorStatus>, IError Constructors RestError(RestErrorStatus) Declaration public RestError(RestErrorStatus status) Parameters Type Name Description RestErrorStatus status RestError(RestErrorStatus, Error) Declaration public RestError(RestErrorStatus status, Error innerError) Parameters Type Name Description RestErrorStatus status Error innerError RestError(RestErrorStatus, Exception) Declaration public RestError(RestErrorStatus status, Exception exception) Parameters Type Name Description RestErrorStatus status Exception exception Properties ErrorEx Declaration public Exception ErrorEx { get; } Property Value Type Description Exception Implements IError"
  },
  "api/Assets.Core.Result.RestErrorStatus.html": {
    "href": "api/Assets.Core.Result.RestErrorStatus.html",
    "title": "Enum RestErrorStatus | Rpg game documentation",
    "keywords": "Enum RestErrorStatus Namespace : Assets.Core.Result Assembly : cs.temp.dll.dll Syntax public enum RestErrorStatus Fields Name Description BearerTokenError NetworkError ServiceError TimeoutError"
  },
  "api/Assets.Core.Result.Result-1.html": {
    "href": "api/Assets.Core.Result.Result-1.html",
    "title": "Class Result<TError> | Rpg game documentation",
    "keywords": "Class Result<TError> Inheritance Object Result<TError> Result<TData, TError> Implements IResult <TError> Namespace : Assets.Core.Result Assembly : cs.temp.dll.dll Syntax public class Result<TError> : IResult<TError> where TError : IError Type Parameters Name Description TError Constructors Result() Declaration public Result() Result(TError) Declaration public Result(TError error) Parameters Type Name Description TError error Properties Error Declaration public TError Error { get; } Property Value Type Description TError IsSuccessful Declaration public bool IsSuccessful { get; } Property Value Type Description Boolean Success Declaration public static Result<TError> Success { get; } Property Value Type Description Result <TError> Operators Implicit(TError to Result<TError>) Declaration public static implicit operator Result<TError>(TError error) Parameters Type Name Description TError error Returns Type Description Result <TError> Implements IResult<TError>"
  },
  "api/Assets.Core.Result.Result-2.html": {
    "href": "api/Assets.Core.Result.Result-2.html",
    "title": "Class Result<TData, TError> | Rpg game documentation",
    "keywords": "Class Result<TData, TError> Inheritance Object Result <TError> Result<TData, TError> Implements IResult <TError> Inherited Members Result<TError>.Success Result<TError>.Error Result<TError>.IsSuccessful Namespace : Assets.Core.Result Assembly : cs.temp.dll.dll Syntax public class Result<TData, TError> : Result<TError>, IResult<TError> where TError : IError Type Parameters Name Description TData TError Constructors Result(TData) Declaration public Result(TData data) Parameters Type Name Description TData data Result(TError) Declaration public Result(TError error) Parameters Type Name Description TError error Properties Data Declaration public TData Data { get; } Property Value Type Description TData Operators Implicit(TData to Result<TData, TError>) Declaration public static implicit operator Result<TData, TError>(TData data) Parameters Type Name Description TData data Returns Type Description Result <TData, TError> Implicit(TError to Result<TData, TError>) Declaration public static implicit operator Result<TData, TError>(TError error) Parameters Type Name Description TError error Returns Type Description Result <TData, TError> Implements IResult<TError>"
  },
  "api/Assets.Core.Services.AuthService.html": {
    "href": "api/Assets.Core.Services.AuthService.html",
    "title": "Class AuthService | Rpg game documentation",
    "keywords": "Class AuthService Service which provides ability ro sign in or sign up Inheritance Object AuthService Implements IAuthService Namespace : Assets.Core.Services Assembly : cs.temp.dll.dll Syntax public class AuthService : Manager<AuthService>, IAuthService Methods RefreshTokenAsync(RefreshTokenRequest, CancellationToken) Refresh token request Declaration public async Task<Result<SignInResponse, AuthenticationError>> RefreshTokenAsync(RefreshTokenRequest request, CancellationToken cancellationToken = null) Parameters Type Name Description RefreshTokenRequest request Serialized request CancellationToken cancellationToken Returns Type Description Task < Assets.Core.Result < SignInResponse , AuthenticationError >> Result providing response or Error SignInAsync(SignInRequest, CancellationToken) Sign in Request Declaration public async Task<Result<SignInResponse, AuthenticationError>> SignInAsync(SignInRequest request, CancellationToken cancellationToken = null) Parameters Type Name Description SignInRequest request Serialized requst CancellationToken cancellationToken Returns Type Description Task < Assets.Core.Result < SignInResponse , AuthenticationError >> Result providing response or Error SignUpAsync(SignUpRequest, CancellationToken) Declaration public async Task<Result<AuthenticationError>> SignUpAsync(SignUpRequest request, CancellationToken cancellationToken = null) Parameters Type Name Description SignUpRequest request CancellationToken cancellationToken Returns Type Description Task < Assets.Core.Result < AuthenticationError >> Implements IAuthService"
  },
  "api/Assets.Core.Services.AuthServiceError.html": {
    "href": "api/Assets.Core.Services.AuthServiceError.html",
    "title": "Class AuthServiceError | Rpg game documentation",
    "keywords": "Class AuthServiceError Auth service error Inheritance Object AuthServiceError Namespace : Assets.Core.Services Assembly : cs.temp.dll.dll Syntax public class AuthServiceError : Error Constructors AuthServiceError() Declaration public AuthServiceError() AuthServiceError(Error) Declaration public AuthServiceError(Error innerError) Parameters Type Name Description Error innerError"
  },
  "api/Assets.Core.Services.BearerProvider.html": {
    "href": "api/Assets.Core.Services.BearerProvider.html",
    "title": "Class BearerProvider | Rpg game documentation",
    "keywords": "Class BearerProvider Inheritance Object BearerProvider Implements IBearerProvider Namespace : Assets.Core.Services Assembly : cs.temp.dll.dll Syntax public class BearerProvider : Manager<BearerProvider>, IBearerProvider Constructors BearerProvider() Declaration public BearerProvider() Methods GetBearerAsync(CancellationToken) Declaration public async Task<Result<string, BearerProviderError>> GetBearerAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < Assets.Core.Result < String , BearerProviderError >> HasTokenExpired(String) Declaration public bool HasTokenExpired(string token) Parameters Type Name Description String token Returns Type Description Boolean Implements IBearerProvider"
  },
  "api/Assets.Core.Services.BearerProviderError.html": {
    "href": "api/Assets.Core.Services.BearerProviderError.html",
    "title": "Class BearerProviderError | Rpg game documentation",
    "keywords": "Class BearerProviderError Inheritance Object BearerProviderError Namespace : Assets.Core.Services Assembly : cs.temp.dll.dll Syntax public class BearerProviderError : Error Constructors BearerProviderError() Declaration public BearerProviderError() BearerProviderError(BearerProviderErrorStatus) Declaration public BearerProviderError(BearerProviderErrorStatus status) Parameters Type Name Description BearerProviderErrorStatus status BearerProviderError(Error) Declaration public BearerProviderError(Error innerError) Parameters Type Name Description Error innerError Properties Status Declaration public BearerProviderErrorStatus Status { get; set; } Property Value Type Description BearerProviderErrorStatus"
  },
  "api/Assets.Core.Services.BearerProviderErrorStatus.html": {
    "href": "api/Assets.Core.Services.BearerProviderErrorStatus.html",
    "title": "Enum BearerProviderErrorStatus | Rpg game documentation",
    "keywords": "Enum BearerProviderErrorStatus Namespace : Assets.Core.Services Assembly : cs.temp.dll.dll Syntax public enum BearerProviderErrorStatus Fields Name Description NoSessionData TokenExpired"
  },
  "api/Assets.Core.Services.CharacterService.html": {
    "href": "api/Assets.Core.Services.CharacterService.html",
    "title": "Class CharacterService | Rpg game documentation",
    "keywords": "Class CharacterService Service designed to fetch and update character data Inheritance Object CharacterService Namespace : Assets.Core.Services Assembly : cs.temp.dll.dll Syntax public class CharacterService : Manager<CharacterService> Methods AddCharacter(CharacterClass, WeaponType, CancellationToken) Adding Character Declaration public async Task<Result<CharacterServiceError>> AddCharacter(CharacterClass characterClass, WeaponType weaponType, CancellationToken cancellationToken = null) Parameters Type Name Description CharacterClass characterClass Class character WeaponType weaponType Weapon type CancellationToken cancellationToken Cancellation Token Returns Type Description Task < Assets.Core.Result < CharacterServiceError >> GetCharactersAsync(CancellationToken) Fetching character list Declaration public async Task<Result<ICollection<CharacterInfoDto>, CharacterServiceError>> GetCharactersAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Cancellation Token Returns Type Description Task < Assets.Core.Result < ICollection < CharacterInfoDto >, CharacterServiceError >> Result containing character collection of character info or error GetMyCharacter(CancellationToken) Fetching information about character of currently logged account Declaration public async Task<Result<CharacterInfoDto, CharacterServiceError>> GetMyCharacter(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < Assets.Core.Result < CharacterInfoDto , CharacterServiceError >> Result containing Character info or Error IsCharacterCreated(CancellationToken) Method which checks if account has created character Declaration public async Task<Result<bool, CharacterServiceError>> IsCharacterCreated(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Cancellation Token Returns Type Description Task < Assets.Core.Result < Boolean , CharacterServiceError >> True if character was created before; otherwise false"
  },
  "api/Assets.Core.Services.CharacterServiceError.html": {
    "href": "api/Assets.Core.Services.CharacterServiceError.html",
    "title": "Class CharacterServiceError | Rpg game documentation",
    "keywords": "Class CharacterServiceError Character service Error Inheritance Object CharacterServiceError Namespace : Assets.Core.Services Assembly : cs.temp.dll.dll Syntax public class CharacterServiceError : Error Constructors CharacterServiceError() Declaration public CharacterServiceError() CharacterServiceError(Error) Declaration public CharacterServiceError(Error innerError) Parameters Type Name Description Error innerError"
  },
  "api/Assets.Core.Services.html": {
    "href": "api/Assets.Core.Services.html",
    "title": "Namespace Assets.Core.Services | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Services Classes AuthService Service which provides ability ro sign in or sign up AuthServiceError Auth service error BearerProvider BearerProviderError CharacterService Service designed to fetch and update character data CharacterServiceError Character service Error QuestService QuestServiceError SessionManager SessionManagerError Interfaces IAuthService IBearerProvider Enums BearerProviderErrorStatus"
  },
  "api/Assets.Core.Services.IAuthService.html": {
    "href": "api/Assets.Core.Services.IAuthService.html",
    "title": "Interface IAuthService | Rpg game documentation",
    "keywords": "Interface IAuthService Namespace : Assets.Core.Services Assembly : cs.temp.dll.dll Syntax public interface IAuthService Methods RefreshTokenAsync(RefreshTokenRequest, CancellationToken) Declaration Task<Result<SignInResponse, AuthenticationError>> RefreshTokenAsync(RefreshTokenRequest request, CancellationToken cancellationToken = null) Parameters Type Name Description RefreshTokenRequest request CancellationToken cancellationToken Returns Type Description Task < Assets.Core.Result < SignInResponse , AuthenticationError >> SignInAsync(SignInRequest, CancellationToken) Declaration Task<Result<SignInResponse, AuthenticationError>> SignInAsync(SignInRequest request, CancellationToken cancellationToken = null) Parameters Type Name Description SignInRequest request CancellationToken cancellationToken Returns Type Description Task < Assets.Core.Result < SignInResponse , AuthenticationError >> SignUpAsync(SignUpRequest, CancellationToken) Declaration Task<Result<AuthenticationError>> SignUpAsync(SignUpRequest request, CancellationToken cancellationToken = null) Parameters Type Name Description SignUpRequest request CancellationToken cancellationToken Returns Type Description Task < Assets.Core.Result < AuthenticationError >>"
  },
  "api/Assets.Core.Services.IBearerProvider.html": {
    "href": "api/Assets.Core.Services.IBearerProvider.html",
    "title": "Interface IBearerProvider | Rpg game documentation",
    "keywords": "Interface IBearerProvider Namespace : Assets.Core.Services Assembly : cs.temp.dll.dll Syntax public interface IBearerProvider Methods GetBearerAsync(CancellationToken) Declaration Task<Result<string, BearerProviderError>> GetBearerAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < Assets.Core.Result < String , BearerProviderError >>"
  },
  "api/Assets.Core.Services.QuestService.html": {
    "href": "api/Assets.Core.Services.QuestService.html",
    "title": "Class QuestService | Rpg game documentation",
    "keywords": "Class QuestService Inheritance Object QuestService Namespace : Assets.Core.Services Assembly : cs.temp.dll.dll Syntax public class QuestService : Manager<QuestService> Methods CompleteQuestAsync(CancellationToken) Declaration public async Task<Result<string, QuestServiceError>> CompleteQuestAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < Assets.Core.Result < String , QuestServiceError >> GetQuestsAsync(CancellationToken) Declaration public async Task<Result<ICollection<QuestDto>, QuestServiceError>> GetQuestsAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < Assets.Core.Result < ICollection < QuestDto >, QuestServiceError >> TakeQuestAsync(Int32, CancellationToken) Declaration public async Task<Result<string, QuestServiceError>> TakeQuestAsync(int questId, CancellationToken cancellationToken = null) Parameters Type Name Description Int32 questId CancellationToken cancellationToken Returns Type Description Task < Assets.Core.Result < String , QuestServiceError >>"
  },
  "api/Assets.Core.Services.QuestServiceError.html": {
    "href": "api/Assets.Core.Services.QuestServiceError.html",
    "title": "Class QuestServiceError | Rpg game documentation",
    "keywords": "Class QuestServiceError Inheritance Object QuestServiceError Namespace : Assets.Core.Services Assembly : cs.temp.dll.dll Syntax public class QuestServiceError : Error Constructors QuestServiceError() Declaration public QuestServiceError() QuestServiceError(Error) Declaration public QuestServiceError(Error innerError) Parameters Type Name Description Error innerError"
  },
  "api/Assets.Core.Services.SessionManager.html": {
    "href": "api/Assets.Core.Services.SessionManager.html",
    "title": "Class SessionManager | Rpg game documentation",
    "keywords": "Class SessionManager Inheritance Object SessionManager Namespace : Assets.Core.Services Assembly : cs.temp.dll.dll Syntax public class SessionManager : Manager<SessionManager> Constructors SessionManager() Declaration public SessionManager() Properties ApiBasePath Declaration public string ApiBasePath { get; } Property Value Type Description String Methods InvalidateSession(CancellationToken) Declaration public void InvalidateSession(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken IsAuthenticated(CancellationToken) Declaration public bool IsAuthenticated(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Boolean Logout() Declaration public void Logout() SignInAsync(String, String, CancellationToken) Declaration public async Task<Result<SessionManagerError>> SignInAsync(string username, string password, CancellationToken cancellationToken = null) Parameters Type Name Description String username String password CancellationToken cancellationToken Returns Type Description Task < Assets.Core.Result < SessionManagerError >> SignUpAsync(String, String, String, CancellationToken) Declaration public async Task<Result<SessionManagerError>> SignUpAsync(string username, string email, string password, CancellationToken cancellationToken = null) Parameters Type Name Description String username String email String password CancellationToken cancellationToken Returns Type Description Task < Assets.Core.Result < SessionManagerError >>"
  },
  "api/Assets.Core.Services.SessionManagerError.html": {
    "href": "api/Assets.Core.Services.SessionManagerError.html",
    "title": "Class SessionManagerError | Rpg game documentation",
    "keywords": "Class SessionManagerError Inheritance Object SessionManagerError Namespace : Assets.Core.Services Assembly : cs.temp.dll.dll Syntax public class SessionManagerError : Error Constructors SessionManagerError() Declaration public SessionManagerError() SessionManagerError(Error) Declaration public SessionManagerError(Error innerError) Parameters Type Name Description Error innerError"
  },
  "api/Assets.Core.Utils.Events.EventFadeComplete.html": {
    "href": "api/Assets.Core.Utils.Events.EventFadeComplete.html",
    "title": "Class Events.EventFadeComplete | Rpg game documentation",
    "keywords": "Class Events.EventFadeComplete Inheritance Object Events.EventFadeComplete Namespace : Assets.Core.Utils Assembly : cs.temp.dll.dll Syntax public class EventFadeComplete : UnityEvent<bool>"
  },
  "api/Assets.Core.Utils.Events.EventGameState.html": {
    "href": "api/Assets.Core.Utils.Events.EventGameState.html",
    "title": "Class Events.EventGameState | Rpg game documentation",
    "keywords": "Class Events.EventGameState Inheritance Object Events.EventGameState Namespace : Assets.Core.Utils Assembly : cs.temp.dll.dll Syntax public class EventGameState : UnityEvent<GameManager.GameState, GameManager.GameState>"
  },
  "api/Assets.Core.Utils.Events.EventGameUIState.html": {
    "href": "api/Assets.Core.Utils.Events.EventGameUIState.html",
    "title": "Class Events.EventGameUIState | Rpg game documentation",
    "keywords": "Class Events.EventGameUIState Inheritance Object Events.EventGameUIState Namespace : Assets.Core.Utils Assembly : cs.temp.dll.dll Syntax public class EventGameUIState : UnityEvent<View>"
  },
  "api/Assets.Core.Utils.Events.html": {
    "href": "api/Assets.Core.Utils.Events.html",
    "title": "Class Events | Rpg game documentation",
    "keywords": "Class Events Inheritance Object Events Namespace : Assets.Core.Utils Assembly : cs.temp.dll.dll Syntax public class Events"
  },
  "api/Assets.Core.Utils.html": {
    "href": "api/Assets.Core.Utils.html",
    "title": "Namespace Assets.Core.Utils | Rpg game documentation",
    "keywords": "Namespace Assets.Core.Utils Classes Events Events.EventFadeComplete Events.EventGameState Events.EventGameUIState Manager<T> Singleton<T>"
  },
  "api/Assets.Core.Utils.Manager-1.html": {
    "href": "api/Assets.Core.Utils.Manager-1.html",
    "title": "Class Manager<T> | Rpg game documentation",
    "keywords": "Class Manager<T> Inheritance Object Manager<T> Namespace : Assets.Core.Utils Assembly : cs.temp.dll.dll Syntax public abstract class Manager<T> : MonoBehaviour where T : MonoBehaviour Type Parameters Name Description T Properties Instance Declaration public static T Instance { get; } Property Value Type Description T Methods Awake() Declaration public virtual void Awake()"
  },
  "api/Assets.Core.Utils.Singleton-1.html": {
    "href": "api/Assets.Core.Utils.Singleton-1.html",
    "title": "Class Singleton<T> | Rpg game documentation",
    "keywords": "Class Singleton<T> Inheritance Object Singleton<T> Namespace : Assets.Core.Utils Assembly : cs.temp.dll.dll Syntax public class Singleton<T> : MonoBehaviour where T : Singleton<T> Type Parameters Name Description T Properties Instance Declaration public static T Instance { get; } Property Value Type Description T IsInitialized Declaration public static bool IsInitialized { get; } Property Value Type Description Boolean Methods Awake() Declaration protected virtual void Awake() OnDestroy() Declaration protected virtual void OnDestroy()"
  },
  "api/Assets.UI.Controls.CharacterList.html": {
    "href": "api/Assets.UI.Controls.CharacterList.html",
    "title": "Class CharacterList | Rpg game documentation",
    "keywords": "Class CharacterList Inheritance Object CharacterList Namespace : Assets.UI.Controls Assembly : cs.temp.dll.dll Syntax public class CharacterList : MonoBehaviour Methods Add(CharacterInfoDto) Declaration public void Add(CharacterInfoDto info) Parameters Type Name Description CharacterInfoDto info Clear() Declaration public void Clear()"
  },
  "api/Assets.UI.Controls.CharacterListRecord.html": {
    "href": "api/Assets.UI.Controls.CharacterListRecord.html",
    "title": "Class CharacterListRecord | Rpg game documentation",
    "keywords": "Class CharacterListRecord Inheritance Object CharacterListRecord Namespace : Assets.UI.Controls Assembly : cs.temp.dll.dll Syntax public class CharacterListRecord : MonoBehaviour Methods SetData(CharacterInfoDto) Declaration public void SetData(CharacterInfoDto characterInfoDto) Parameters Type Name Description CharacterInfoDto characterInfoDto"
  },
  "api/Assets.UI.Controls.html": {
    "href": "api/Assets.UI.Controls.html",
    "title": "Namespace Assets.UI.Controls | Rpg game documentation",
    "keywords": "Namespace Assets.UI.Controls Classes CharacterList CharacterListRecord"
  },
  "api/Assets.UI.GameUIManager.html": {
    "href": "api/Assets.UI.GameUIManager.html",
    "title": "Class GameUIManager | Rpg game documentation",
    "keywords": "Class GameUIManager Inheritance Object GameUIManager Namespace : Assets.UI Assembly : cs.temp.dll.dll Syntax public class GameUIManager : Manager<GameUIManager> Properties GetTopView Declaration public View GetTopView { get; } Property Value Type Description View Methods Navigate<TView>() Declaration public void Navigate<TView>() where TView : View Type Parameters Name Description TView"
  },
  "api/Assets.UI.html": {
    "href": "api/Assets.UI.html",
    "title": "Namespace Assets.UI | Rpg game documentation",
    "keywords": "Namespace Assets.UI Classes GameUIManager MenuBar View"
  },
  "api/Assets.UI.MenuBar.html": {
    "href": "api/Assets.UI.MenuBar.html",
    "title": "Class MenuBar | Rpg game documentation",
    "keywords": "Class MenuBar Inheritance Object MenuBar Namespace : Assets.UI Assembly : cs.temp.dll.dll Syntax public class MenuBar : MonoBehaviour"
  },
  "api/Assets.UI.View.html": {
    "href": "api/Assets.UI.View.html",
    "title": "Class View | Rpg game documentation",
    "keywords": "Class View Inheritance Object View CharacterView GalaxyView MainView MapView RankingView TavernView Namespace : Assets.UI Assembly : cs.temp.dll.dll Syntax public abstract class View : MonoBehaviour Methods OnAppeared() Declaration public virtual void OnAppeared() OnBinding() Declaration public virtual void OnBinding() OnDisappeared() Declaration public virtual void OnDisappeared()"
  },
  "api/Assets.UI.Views.CharacterView.html": {
    "href": "api/Assets.UI.Views.CharacterView.html",
    "title": "Class CharacterView | Rpg game documentation",
    "keywords": "Class CharacterView Inheritance Object View CharacterView Inherited Members View.OnDisappeared() Namespace : Assets.UI.Views Assembly : cs.temp.dll.dll Syntax public class CharacterView : View Methods OnAppeared() Declaration public override async void OnAppeared() Overrides View.OnAppeared() OnBinding() Declaration public override void OnBinding() Overrides View.OnBinding()"
  },
  "api/Assets.UI.Views.GalaxyView.html": {
    "href": "api/Assets.UI.Views.GalaxyView.html",
    "title": "Class GalaxyView | Rpg game documentation",
    "keywords": "Class GalaxyView Inheritance Object View GalaxyView Inherited Members View.OnAppeared() View.OnDisappeared() View.OnBinding() Namespace : Assets.UI.Views Assembly : cs.temp.dll.dll Syntax public class GalaxyView : View"
  },
  "api/Assets.UI.Views.html": {
    "href": "api/Assets.UI.Views.html",
    "title": "Namespace Assets.UI.Views | Rpg game documentation",
    "keywords": "Namespace Assets.UI.Views Classes CharacterView GalaxyView MainView MapView RankingView TavernView"
  },
  "api/Assets.UI.Views.MainView.html": {
    "href": "api/Assets.UI.Views.MainView.html",
    "title": "Class MainView | Rpg game documentation",
    "keywords": "Class MainView Inheritance Object View MainView Inherited Members View.OnAppeared() View.OnDisappeared() View.OnBinding() Namespace : Assets.UI.Views Assembly : cs.temp.dll.dll Syntax public class MainView : View"
  },
  "api/Assets.UI.Views.MapView.html": {
    "href": "api/Assets.UI.Views.MapView.html",
    "title": "Class MapView | Rpg game documentation",
    "keywords": "Class MapView Inheritance Object View MapView Inherited Members View.OnAppeared() View.OnDisappeared() View.OnBinding() Namespace : Assets.UI.Views Assembly : cs.temp.dll.dll Syntax public class MapView : View"
  },
  "api/Assets.UI.Views.RankingView.html": {
    "href": "api/Assets.UI.Views.RankingView.html",
    "title": "Class RankingView | Rpg game documentation",
    "keywords": "Class RankingView Inheritance Object View RankingView Inherited Members View.OnBinding() Namespace : Assets.UI.Views Assembly : cs.temp.dll.dll Syntax public class RankingView : View Methods OnAppeared() Declaration public override async void OnAppeared() Overrides View.OnAppeared() OnDisappeared() Declaration public override void OnDisappeared() Overrides View.OnDisappeared() UpdateList() Declaration public void UpdateList()"
  },
  "api/Assets.UI.Views.TavernView.html": {
    "href": "api/Assets.UI.Views.TavernView.html",
    "title": "Class TavernView | Rpg game documentation",
    "keywords": "Class TavernView Inheritance Object View TavernView Inherited Members View.OnDisappeared() View.OnBinding() Namespace : Assets.UI.Views Assembly : cs.temp.dll.dll Syntax public class TavernView : View Methods OnAppeared() Declaration public override async void OnAppeared() Overrides View.OnAppeared()"
  },
  "manual/coniunctis.html": {
    "href": "manual/coniunctis.html",
    "title": "Coniunctis nec qui et lanient monticolae vitae | Rpg game documentation",
    "keywords": "Coniunctis nec qui et lanient monticolae vitae Opem ille Lorem markdownum cavis exululat inutile. Illi quem caeli, vola patruo difficili Iuppiter Patraeque, est ardebant ingeniis Troica intus Amore tibi mirantem superfusis, multum. Ut Achilles Et sitim Tibi modo ait temptant crinita daret Pariter in removi offensasque Lenaeo damno terra Phoebes ut damnosa classis ignes templo; tua ulla capillos ultima. Videre percusso plectro templa fuit diva minimum debere, quid nomen Philomela animis. Verbis istis flagrat vulnera inpediique ignes. Gravi filo obvius arte Amphionis Panes emisitque iubet. Latona te timens Latentia ante, eundem meritorum sunto ! Elige in timuit templa ferrea, qui arma ligati stagnum turbant. Fraternaque aeternus, dedisse, naufragus corripiens ranas Amathunta et quod laetior culpa nec semper scorpius fuit vicem corpora ardere. Fallit in artus primordia, fratres per aliis , ipsi manu Asiae quod marmorea . mountain(googleVga, pngIphone); var radcabBitrate = dnsCronRecursion; gui(2); ipImageAix += vle(drm_cisc, horizontal + computer_key); jre(vaporware_adc_multi); Lumina ut tamen praesentia vidistis nymphae auroque Bromumque in portant furorem. Visa init resurgere praevitiat canibus et, dedignata turea, ilia. Pisenore mensura insula aere nec per o gladium causa: Alcidae. Veris sentes pallet, alta melius nostra amborum probant, deam. Iuventae dedimus nitidaque hunc traxisse sermonibus pectine flecti an pateres, hac ore gelidis foret semper. Sithon pelle. Bracchia Hippason videntur fateri hosti: palpitat animo est reliquit anne nam confusaque. Interea rex altis munera quem quae quoque rorant, rauco albescere scopulo moriensque parvo, pectus illa, quadrupedes. Notavit haec. Vertit pars quem Euryte casu usta iterum! Ablatum pectus corripiunt neu humus tamquam; ducens stellarum amore. Pulsisque latet, ad tamen victor fulva Tirynthius posco; qui inque in poena quidem enses !"
  },
  "manual/etiam.html": {
    "href": "manual/etiam.html",
    "title": "Etiam nantemque exul | Rpg game documentation",
    "keywords": "Etiam nantemque exul Cum tulit Lorem markdownum quos stimulosque altos . Putat nubes molle Troiae vero dea; nostraque plurima . Vos de mihi, credidit: salibus et iacuit, volvitur sunt unda fronti deriguisse refert . Sumpsisse viso Nubila nomine. Purpura se o et causa parva ripas, adsonat saevaque; quid modo ambo et venere voveo. Sine et esse, illa tempore, sive tibi roseo, ministerio altos. Trepident medicamine, primasque cum et peregit dapibusque quoslibet hominis quoque insula. Tepentibus ut Cecropios ab turba, est auro ferventi aliter duratos feres differtis Ausoniis potes, non noctis Laertaque iuvenes. Caelumque vestigia Et promissa fila sentiet leges; Phrygiae et levatus ferire? Salutifer coniugis fierent ante fecissent post vultumque ultima, per radios currere; tandem. Fuerat qua, ne foedera reformatus nunc diu dea audet nonne. Ut utinam mitia tenuerunt movent spectans Mavortis nulla ite, somnos exsiccata dixit Aeetias. Binas Trinacriam album ex ipse. Quoque una utraque tardius placetque gerere; mariti sed dare ludunt memorante Delphice corpora. Caret quantum intellegat venis gaudent eurus. Et suos crista; has et ferarum quid audit omine; mea cum praemia quae duris, suspicor. Adflati qui Spiro conata supprimit diemque; ora oblitus ensem alti non quo lacrimis ferunt, ageret Cebrenida rutilis delendaque? Terras lata modus: nec fas, misi utque adpositis Iunonis. Fide vidit, ferox Schoeneia mundi, voce, tellus pariterque pedum, sic Celadon securior corpora partesque posito. Potest faxo unda pendulaque ille rostro, haesit pars: formidine captat, viseret simulaverat! Sequi est peragit flumineae pallent simulatas formae avulsa, imagine undis; formam. Et nec sed adeunt, huic aequa et ignes nec, medere terram. Move ipsum abnuat retemptat retinebat duabus diu Iovi est pluma. Tecum non deducit Pelops Inachus: arcet aliquemque, regia telo. Tollens altore nec semel qui voce Palatinae Apertis et dei duo inquit ; luna secundo, fervida terret. In haec dextra septima Tydides tibi: congelat hospes nativum radice tegumenque membris Hesperio ne Libys, est vocabula siqua. Dumque stet mulces , ut fontem dea atricolor, est pronos, clarissimus poterat cum intrare sidere templi. cut_metadata(whitelistSequenceUnit.thick.of_bezel_cdma( address_suffix_troubleshooting), sram_trojan(4, hdmi_network - 1)); flash.apache -= web_gps_plug; if (offline.dac_bridge(scrollEbookRom, parameter.internal_target_superscalar(2)) < qwerty + 2 - ipvCgiContextual) { certificateIdeAsp = overclocking + app; supplyCard = siteRaster; } Sagitta curvum quoque petisti opibusque proximitas in, illa vestrum, mihi domum nescia flexit sacra in. Magni vive sim crescente causam saxo voluit, mens, quod. Tela ter ulterius similis illos nato refugit ait verbaque nec fatigatum penates iaculatricemque cecidit pinnas, cum. Misso contigit caelo dedissent lumina; nympha ad vobis occidat, malo sacra utrumque cunctos Diomedeos addita. Virgineus autumnos, ait mitissima curru: fuit sed fessi se habebat hactenus Ultor; meus."
  }
}